@include exports( "input/layout" ) {

    // Generic input
    .k-input {
        margin: 0;
        padding: $input-padding-y $input-padding-x;
        width: 100%;
        min-width: 0;
        height: $input-inner-calc-height;
        border: 0;
        outline: 0;
        box-sizing: border-box;
        // Targets https://github.com/telerik/kendo-react/issues/638.
        box-shadow: none;
        color: inherit;
        background: none;
        font: inherit;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        flex: 0 1 auto;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-appearance: none;

        // Hide clear icon
        &::-ms-clear { display: none; }

        // Placeholder text
        &::placeholder {
            color: $input-placeholder-text;
            opacity: $input-placeholder-opacity;
            user-select: none;
        }
        &:-ms-input-placeholder {
            color: $input-placeholder-text;
        }

        // Invalid
        &:invalid {
            box-shadow: none;
        }
    }


    // TODO: Deprecate
    // Input spacing
    .k-space-left {
        padding-left: 1.9em;

        .k-icon {
            margin: -8px 0 0;
            position: absolute;
            top: 50%;
            left: 3px;
        }
    }

    .k-space-right {
        padding-right: 1.9em;

        .k-icon {
            margin: -8px 0 0;
            position: absolute;
            top: 50%;
            right: 3px;
        }
    }


    // Input prefix and suffix
    .k-input-prefix,
    .k-input-suffix {
        display: flex;
        align-items: center;
        flex-shrink: 0;
        height: $button-inner-calc-size;

        > * {
            flex-shrink: 0;
        }

        .k-icon {
            margin-top: 0;
            margin-bottom: 0;
            padding: $textbox-icon-padding-y $textbox-icon-padding-x;
            box-sizing: content-box;
            position: static;
        }
    }


    // Textbox with icon styles
    .k-input-icon {
        width: $textbox-icon-width;
        height: $textbox-icon-width;
        display: flex;
        align-items: center;
        justify-content: center;

        .k-ie9 & {
            position: absolute;
            height: 100%;
            right: 0;
            top: 0;
        }

        .k-rtl &,
        [dir="rtl"] & {
            .k-ie9 & {
                left: 0;
                right: auto;
            }
        }
    }


    // TODO: remove
    // Clear value
    .k-clear-value {
        cursor: pointer;
    }


    // Searchbar
    .k-searchbar {
        flex: 1 1 auto;
        display: flex;
        flex-flow: row nowrap;
    }


    // Floating label
    .k-textbox-container,
    .k-floating-label-container {
        padding-top: $floating-label-height;
        display: inline-flex;
        vertical-align: middle;
        position: relative;
        flex-direction: column;
        justify-content: stretch;

        > .k-label {
            max-width: 90%;
            line-height: $textbox-line-height;
            white-space: nowrap;
            text-overflow: ellipsis;
            position: absolute;
            top: calc( #{$floating-label-height} + #{$input-border-width} + #{$input-padding-y} );
            left: calc( #{$input-padding-x} + #{$input-border-width} );
            overflow: hidden;
            cursor: text;
            transition: transform $floating-label-transition, color $floating-label-transition;
            pointer-events: none;
        }

        > .k-textbox,
        > .k-widget {
            flex: 1 1 auto;
            width: auto;
        }

        &.k-state-empty {
            > .k-label {
                transform: translate( 0, 0 ) scale( 1 );
            }
        }

        > .k-label,
        &.k-state-focused > .k-label {
            // persist alignment after scaling
            $half-scale-percent: ((1 - $floating-label-scale) * 100% / 2);

            // sass-lint:disable indentation
            // transform position to top-left corner of the textbox-container
            // do not use single translate + calc() because of IE10/11
            $fls: -$floating-label-scale;
            transform: translate(-$input-padding-x,    $fls * $input-padding-y)
                       translate(-$input-border-width, $fls * $textbox-line-height)
                       translate(-$half-scale-percent, $fls * $half-scale-percent)
                       scale($floating-label-scale);
            // sass-lint:enable indentation
        }

        &.k-state-empty:not(.k-state-focused) ::placeholder {
            color: transparent;
        }

        .k-rtl &,
        &[dir="rtl"] {

            > .k-label {
                left: auto;
                right: calc( #{$input-padding-x} + #{$input-border-width} );
            }

            &.k-state-empty {
                > .k-label {
                    transform: translate( 0, 0 ) scale( 1 );
                }
            }

            > .k-label,
            &.k-state-focused > .k-label {
                $half-scale-percent: ((1 - $floating-label-scale) * 100% / 2);

                // sass-lint:disable indentation
                $fls: -$floating-label-scale;
                transform: translate($input-padding-x,    $fls * $input-padding-y)
                            translate($input-border-width, $fls * $textbox-line-height)
                            translate($half-scale-percent, $fls * $half-scale-percent)
                            scale($floating-label-scale);
                // sass-lint:enable indentation
            }
        }
    }


    // Fieldset
    .k-fieldset {
        margin: $fieldset-margin;
        border-width: 1px 0 0;
        border-style: solid;
        padding: 25px 0 0;

        > legend {
            margin-left: 0;
            padding: 0 $padding-x 0 0;
            text-transform: uppercase;
        }
    }


    // Label
    kendo-label > .k-label {
        margin: 0;
    }

    .k-label-optional {
        margin-left: $label-optional-margin-x;
        font-size: $label-optional-font-size;
        font-style: $label-optional-font-style;
        align-self: center;
    }

    .k-label-empty {
        &::before {
            content: "";
            display: inline-block;
        }
    }

    .k-text-disabled {
        @include disabled( $disabled-styling );
    }

}




@include exports("input/layout/jQuery-label") {

    .k-input-label {
        margin-right: $horizontal-form-label-margin-x;
        z-index: 1;

        &:dir(rtl),
        .k-rtl &,
        &.k-rtl,
        [dir="rtl"] &,
        &[dir="rtl"] {
            margin-right: 0;
            margin-left: $horizontal-form-label-margin-x;
        }
    }

}




@include exports("input/layout/autofill-fix") {

    // This is needed for the textbox container to capture browser autofill
    @keyframes autoFillStart {
        from {}
        to {}
    }
    @keyframes autoFillEnd {
        from {}
        to {}
    }

    // Generic class for autofill animations
    .k-autofill:-webkit-autofill {
        animation-name: autoFillStart;
    }
    .k-autofill:not(:-webkit-autofill) {
        animation-name: autoFillEnd;
    }


    .k-textbox:-webkit-autofill {
        animation-name: autoFillStart;
    }
    .k-textbox:not(:-webkit-autofill) {
        animation-name: autoFillEnd;
    }

}
