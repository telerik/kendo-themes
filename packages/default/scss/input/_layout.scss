@include exports( "input/layout" ) {

    // Generic input
    .k-input {
        @include border-radius( $input-border-radius );
        margin: 0;
        padding: 0;
        width: 100%;
        min-width: 0;
        border-width: $input-border-width;
        border-style: solid;
        outline: 0;
        font-family: $input-font-family;
        font-size: $input-font-size;
        line-height: $input-line-height;
        box-shadow: none;
        display: inline-flex;
        flex-flow: row nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-appearance: none;
    }
    input.k-input {
        padding: $input-padding-y $input-padding-x;
    }


    // Input inner
    .k-input-inner {
        padding: $input-padding-y $input-padding-x;
        width: 100%;
        border: 0;
        outline: 0;
        color: inherit;
        background: none;
        font: inherit;
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-appearance: none;

        // Hide clear icon
        &::-ms-clear { display: none; }

        // Placeholder text
        &::placeholder {
            color: $input-placeholder-text;
            opacity: $input-placeholder-opacity;
            user-select: none;
        }
        &:-ms-input-placeholder {
            color: $input-placeholder-text;
        }

        // Invalid
        &:invalid {
            box-shadow: none;
        }
    }
    span.k-input-inner {
        display: flex;
        flex-flow: row nowrap;

        .k-value-icon {
            flex: none;
        }
        .k-value-text {
            flex: 1;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }


    // Input prefix and suffix
    .k-input-prefix,
    .k-input-suffix {
        display: flex;
        align-items: center;
        flex: none;

        > * {
            flex-shrink: 0;
        }
    }


    // Input
    .k-input-icon {
        width: $input-icon-width;
        height: $input-icon-height;
        flex: none;
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;
    }


    // Clear value
    .k-clear-value {
        width: $input-icon-width;
        height: $input-icon-height;
        outline: 0;
        flex: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: .5;
    }
    .k-clear-value:hover,
    .k-clear-value.k-state-hover {
        opacity: 1;
    }


    // Input button
    .k-input-button {
        min-width: calc( #{$icon-size} + #{$kendo-button-padding-y * 2} );
        border-width: 0;
        box-shadow: none;
    }


    // Input spinner
    .k-input-spinner {
        min-width: calc( #{$icon-size} + #{$kendo-button-padding-y * 2} );
        display: flex;
        flex-flow: column nowrap;

        .k-spinner-increase,
        .k-spinner-decrease {
            padding: 0;
            border-width: 0;
            flex: 1 1 50%;
            aspect-ratio: auto;
            box-shadow: none;

            > .k-button-icon {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
        }
    }


    // Searchbar
    .k-searchbar {
        flex: 1 1 auto;
        display: flex;
        flex-flow: row nowrap;
    }

}




@include exports("input/layout/autofill-fix") {

    // This is needed for the textbox container to capture browser autofill
    @keyframes autoFillStart {
        from {}
        to {}
    }
    @keyframes autoFillEnd {
        from {}
        to {}
    }

    // Generic class for autofill animations
    .k-autofill:-webkit-autofill {
        animation-name: autoFillStart;
    }
    .k-autofill:not(:-webkit-autofill) {
        animation-name: autoFillEnd;
    }


    .k-input:-webkit-autofill {
        animation-name: autoFillStart;
    }
    .k-input:not(:-webkit-autofill) {
        animation-name: autoFillEnd;
    }

}
