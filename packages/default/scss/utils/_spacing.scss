@include exports( "utils/spacing" ) {

    // sass-lint:disable-block no-important
    // sass-lint:disable-block indentation

    $utils-margin: (
        m: margin,
        mt: margin-top,
        mr: margin-right,
        mb: margin-bottom,
        ml: margin-left
    ) !default;

    $utils-padding: (
        p: padding,
        pt: padding-top,
        pr: padding-right,
        pb: padding-bottom,
        pl: padding-left
    ) !default;

    /// This is equivalent to `margin: VALUE;`. Margin area on all four sides of the element.
    /// @name k-m-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `margin-top: VALUE;`. Margin area on top of the element.
    /// @name k-mt-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `margin-right: VALUE;`. Margin area on right of the element.
    /// @name k-mr-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `margin-bottom: VALUE;`. Margin area on bottom of the element.
    /// @name k-mb-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `margin-left: VALUE;`. Margin area on left of the element.
    /// @name k-ml-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `margin-left: VALUE; margin-right: VALUE;`. Margin area on left and right of the element.
    /// @name k-mx-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `margin-top: VALUE; margin-bottom: VALUE;``. Margin area on top and bottom of the element.
    /// @name k-my-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    // Margin
    @each $size, $val in $spacing {
        @each $name, $prop in $utils-margin {
            .k-#{$name}-#{$size} { #{$prop}: $val !important; }
        }

        .k-mx-#{$size} {
            margin-left: $val !important;
            margin-right: $val !important;
        }
        .k-my-#{$size} {
            margin-top: $val !important;
            margin-bottom: $val !important;
        }
    }

    /// This is equivalent to `padding: VALUE;`. Padding area on all four sides of the element.
    /// @name k-p-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `padding-top: VALUE;`. Padding area on top of the element.
    /// @name k-pt-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `padding-right: VALUE;`. Padding area on right of the element.
    /// @name k-pr-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `padding-bottom: VALUE;`. Padding area on bottom of the element.
    /// @name k-pb-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `padding-left: VALUE;`. Padding area on left of the element.
    /// @name k-pl-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `padding-left: VALUE; padding-right: VALUE;`. Padding area on left and right of the element.
    /// @name k-px-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    /// This is equivalent to `padding-top: VALUE; padding-bottom: VALUE;``. Padding area on top and bottom of the element.
    /// @name k-py-VALUE
    /// @group spacing
    /// @contextType css
    _ {}

    // Padding
    @each $size, $val in $spacing {
        @each $name, $prop in $utils-padding {
            .k-#{$name}-#{$size} { #{$prop}: $val !important; }
        }

        .k-px-#{$size} {
            padding-left: $val !important;
            padding-right: $val !important;
        }
        .k-py-#{$size} {
            padding-top: $val !important;
            padding-bottom: $val !important;
        }
    }

    /// This is equivalent to `gap: VALUE;`. Gap area between both rows and columns in grid and flexbox layouts.
    /// @name k-gap-VALUE
    /// @group spacing

    /// This is equivalent to `column-gap: VALUE;`. Gap area between columns in grid and flexbox layouts.
    /// @name k-gap-x-VALUE
    /// @group spacing

    /// This is equivalent to `row-gap: VALUE;`. Gap area between rows in grid and flexbox layouts.
    /// @name k-gap-y-VALUE
    /// @group spacing

    // Gap
    .k-no-gap { gap: 0 !important; }

    @each $size, $val in $spacing {
        .k-gap-#{$size}     { gap: $val; }
        .k-gap-x-#{$size}   { column-gap: $val; }
        .k-gap-y-#{$size}   { row-gap: $val; }

        .\!k-gap-#{$size}   { gap: $val !important; }
        .\!k-gap-x-#{$size} { column-gap: $val !important; }
        .\!k-gap-y-#{$size} { row-gap: $val !important; }
    }
}
