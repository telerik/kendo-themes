@include exports("button/layout") {

    // Button
    .k-button {
        @include border-radius( $button-border-radius );
        padding: $button-padding-y $button-padding-x;
        box-sizing: border-box;
        border-width: $button-border-width;
        border-style: solid;
        font-size: $button-font-size;
        line-height: $button-line-height;
        font-family: $button-font-family;
        text-align: center;
        text-decoration: none;
        white-space: nowrap;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: $icon-spacing;
        vertical-align: middle;
        user-select: none;
        cursor: pointer;
        outline: none;
        -webkit-appearance: none;
        position: relative;

        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        &:disabled,
        &.k-state-disabled {
            @include disabled( $disabled-styling );
        }

        &::-moz-focus-inner {
            padding: 0;
            border: 0;
            outline: 0;
        }

        &:hover,
        &:focus {
            text-decoration: none;
            outline: 0;
        }

        .k-icon,
        .k-image,
        .k-sprite {
            color: inherit;
            align-self: center;
            position: relative;
        }

    }


    // Button icon
    .k-button .k-button-icon {
        color: inherit;
        align-self: center;
        position: relative;
    }


    // Button text
    .k-button .k-button-text {}


    // Button arrow
    .k-button-arrow {
        padding-left: $button-arrow-padding-x;
        padding-right: $button-arrow-padding-x;
        flex: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
    .k-button > .k-button-arrow {
        margin-inline-start: -$button-arrow-padding-x;
        margin-inline-end: -$button-padding-x;
    }


    // Text button
    .k-text-button {

        > .k-icon,
        > .k-button-icon {
            display: none;
        }
    }


    // Icon button
    .k-icon-button,
    .k-button.k-button-icon {
        padding: $button-padding-y;
        gap: 0;

        > .k-text,
        > .k-button-text {
            display: none;
        }

        .k-button-icon {
            margin: 0;
            min-width: calc( #{$button-font-size} * #{$button-line-height} );
            min-height: calc( #{$button-font-size} * #{$button-line-height} );
        }
    }
    .k-icon-button > .k-button-arrow {
        margin-inline-start: 0;
        margin-inline-end: -$button-padding-y;
    }
    // TODO: REMOVE
    .k-button.k-button-icon {
        padding: $button-padding-y;
        width: $button-calc-size;
        height: $button-calc-size;
    }


    // Input button
    .k-input-button {}
    .k-input-button.k-icon-button {}


    // Menu Button
    .k-menu-button,
    .k-dropdown-button {
        outline: 0;
        display: inline-flex;
        flex-flow: row nowrap;
        vertical-align: middle;
    }


    // Button group
    .k-button-group {
        margin: 0;
        padding: 0;
        border-width: 0;
        box-sizing: border-box;
        list-style: none;
        outline: 0;
        white-space: nowrap;
        display: inline-flex;
        flex-direction: row;
        vertical-align: middle;
        position: relative;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: $rgba-transparent;

        > .k-button + .k-button {
            margin-inline-start: if( $button-border-width == 0, null, -$button-border-width );
        }

        > .k-button:hover,
        > .k-button.k-state-hover,
        > .k-button:focus,
        > .k-button.k-state-focus,
        > .k-button:active,
        > .k-button.k-state-active,
        > .k-button.k-state-selected {
            z-index: 2;
        }

        .k-button:not(:first-child):not(:last-child) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
        > .k-button:first-child:not(:only-child) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
        > .k-button:last-child:not(:only-child) {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }

        &:disabled,
        &[disabled],
        &.k-disabled,
        &.k-state-disabled {
            opacity: 1;
            filter: none;
        }

    }

    .k-button-group-stretched {
        width: 100%;

        > * {
            flex: 1 0 0%;
            overflow: hidden;
        }
    }


    // Split button
    .k-split-button {
        border-width: 0;
        border-radius: 0;
        outline: 0;
        display: inline-flex;
        flex-flow: row nowrap;
        vertical-align: middle;

        .k-split-button-arrow {
            padding: $button-arrow-padding-y $button-arrow-padding-x;
            width: auto;
            flex: none;

            .k-button-icon {
                min-width: 0;
            }
        }
    }


    // Flat button and bare
    .k-button-flat {
        border-color: transparent !important; // sass-lint:disable-line no-important
        color: inherit;
        background: none !important; // sass-lint:disable-line no-important
        box-shadow: none !important; // sass-lint:disable-line no-important
        transition: color .2s ease-in-out;

        // Overlay background
        &::before {
            display: block;
        }

        // Focus ring
        &::after {
            box-shadow: inset 0 0 0 2px currentColor;
            display: block;
        }

        &:focus,
        &.k-state-focus,
        &.k-state-focused {

            &::after {
                opacity: .12;
            }
        }
    }
    .k-button.k-flat,
    .k-button.k-bare {
        @extend .k-button-flat;
    }


    // Outline button
    .k-button-outline {
        @include box-shadow( none );
        color: inherit;
        background-color: transparent;
        background-image: none !important; // sass-lint:disable-line no-important
    }
    .k-button.k-outline {
        @extend .k-button-outline;
    }


    // Link button
    .k-button-link {
        @include box-shadow( none );
        border-color: transparent !important; // sass-lint:disable-line no-important
        color: inherit;
        background-color: transparent !important; // sass-lint:disable-line no-important
        background-image: none !important; // sass-lint:disable-line no-important
        text-decoration: none;
    }
    .k-button-link:hover,
    .k-button-link.k-state-hover {
        text-decoration: underline;
    }


    // Clear button
    .k-button-clear {
        border-color: transparent !important; // sass-lint:disable-line no-important
        color: inherit;
        background: none !important; // sass-lint:disable-line no-important
        box-shadow: none !important; // sass-lint:disable-line no-important
    }


    // IE
    .k-ie .k-button-group,
    .k-ie .k-split-button {
        .k-button {
            @include border-radius( 0 );
        }
    }

}




@include exports( "button/layout/overlay" ) {

    // Button overlay
    .k-button-overlay {
        @include border-radius( inherit );
        content: "";
        background: currentColor;
        opacity: 0;
        display: none;
        pointer-events: none;
        position: absolute;
        left: -$button-border-width;
        right: -$button-border-width;
        top: -$button-border-width;
        bottom: -$button-border-width;
        z-index: 0;
        transition: opacity .2s ease-in-out;
    }


    .k-button {

        &::before {
            @extend .k-button-overlay;
        }

        // Hovered state
        &:hover,
        &.k-state-hover {
            &::before {
                opacity: $flat-button-hover-opacity;
            }
        }

        // Focused state
        &:focus,
        &.k-state-focus,
        &.k-state-focused {
            &::before {
                opacity: $flat-button-focus-opacity;
            }
        }
        &.k-no-focus:not(:hover),
        &.k-no-focus:not(.k-state-hover) {
            &::before {
                opacity: 0;
            }
        }

        // Active state
        &:active,
        &.k-state-active {
            &::before {
                opacity: $flat-button-active-opacity;
            }
        }

        // Selected state
        &.k-state-selected {
            &::before {
                opacity: $flat-button-selected-opacity;
            }
        }

    }

}




@include exports( "button/layout/focus-ring" ) {

    .k-button {

        &::after {
            @include border-radius( inherit );
            content: "";
            opacity: 0;
            display: none;
            pointer-events: none;
            position: absolute;
            left: -$button-border-width;
            right: -$button-border-width;
            top: -$button-border-width;
            bottom: -$button-border-width;
            z-index: 0;
            transition: opacity .2s ease-in-out;
        }
    }
}




@include exports( "button/ie-compat" ) {

    .k-ie {

        .k-button-icontext {

            .k-icon,
            .k-image,
            .k-sprite {
                margin: 0 $icon-spacing 0 0;
            }

            &.k-rtl,
            .k-rtl &,
            &[dir="rtl"],
            [dir="rtl"] & {
                .k-icon,
                .k-image,
                .k-sprite {
                    margin: 0 0 0 $icon-spacing;
                }
            }
        }

    }

}
