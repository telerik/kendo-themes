@include exports( "button/theme" ) {
    $outline-primary-button-text: $accent !default;

    // Default button
    .k-button {
        @include appearance( button );
        background-clip: padding-box;

        .k-ie11 &,
        .k-edge12 &,
        .k-edge13 & {
            background-clip: border-box;
        }

        // Hover state
        &:hover,
        &.k-state-hover {
            @include appearance( hovered-button );
        }

        // Focused state
        &:focus,
        &.k-state-focused {
            box-shadow: $button-focused-shadow;
        }

        // Pressed state
        &:active,
        &.k-state-active {
            @include appearance( pressed-button );
            box-shadow: inset $button-pressed-shadow;
        }

        // Selected state
        &.k-state-selected {
            @include appearance( pressed-primary-button );
            box-shadow: inset $primary-button-pressed-shadow;
        }

    }

    // Primary button
    .k-button.k-primary {
        @include appearance( primary-button );

        // Hovoer state
        &:hover,
        &.k-state-hover {
            @include appearance( hovered-primary-button );
        }

        // Focused state
        &:focus,
        &.k-state-focused {
            box-shadow: $primary-button-focused-shadow;
        }

        // Active state
        &:active,
        &.k-state-active {
            @include appearance( pressed-primary-button );
            box-shadow: inset $primary-button-pressed-shadow;
        }

        // Selected state
        &.k-state-selected {
            @include appearance( pressed-primary-button );
            box-shadow: inset $primary-button-pressed-shadow;
        }

    }

    //DropDown Button
    .k-dropdown-button {

        &:active > .k-button:not(:disabled),
        &.k-state-active > .k-button:not(:disabled) {
            box-shadow: inset $button-pressed-shadow;
        }

        &:focus > .k-button,
        &.k-state-focused > .k-button {
            box-shadow: $button-focused-shadow;
        }

        .k-widget {
            border-width: 0;
            display: inline-block;
        }
    }

    // Button group
    .k-button-group {
        background-clip: padding-box;

        .k-ie11 &,
        .k-edge12 &,
        .k-edge13 & {
            background-clip: border-box;
        }

        // Focused state
        .k-button:focus,
        .k-button.k-state-focused,
        > input[type="radio"]:focus + .k-button,
        > input[type="checkbox"]:focus + .k-button {
            box-shadow: inset 0 0 0 2px rgba(0, 0, 0, .13);
        }

        // Selected state
        .k-button:active,
        .k-button.k-state-active,
        .k-button.k-state-selected,
        > input[type="radio"]:checked + .k-button,
        > input[type="checkbox"]:checked + .k-button {
            @include appearance( pressed-primary-button );
            box-shadow: inset $primary-button-pressed-shadow;
        }

        // Disabled state
        &.k-state-disabled .k-button,
        .k-state-disabled {

            &:not(.k-state-active) {
                @include appearance( button );
            }
        }

    }

    //SplitButton
    .k-split-button:focus,
    .k-split-button.k-state-focused {
        outline: none;
        box-shadow: $button-focused-shadow;
    }

    .k-split-button.k-button-group .k-button {
        &:active,
        &.k-state-active {
            @include appearance( pressed-button );
            box-shadow: inset $button-pressed-shadow;
        }
    }

}




@include exports( "outline-button/theme" ) {

    // Outline button
    .k-button.k-outline {
        border-color: currentColor;
        color: $button-text;
        background: none;
        box-shadow: none;

        // Hover state
        &:hover,
        &.k-state-hover {
            @include fill( contrast-wcag( $button-text ), $button-text, $button-text, none );
        }

        // Focused state
        &:focus,
        &.k-state-focused {
            box-shadow: $button-focused-shadow;
        }

        // Active state
        &:active,
        &.k-state-active {
            @include fill( contrast-wcag( $button-text ), $button-text, $button-text, none );
        }

        // Selected state
        &.k-state-selected {
            @include fill( contrast-wcag( $button-text ), $button-text, $button-text, none );
        }
    }
    .k-button.k-primary.k-outline {
        border-color: currentColor;
        color: $primary-button-bg;
        background: none;
        box-shadow: none;

        // Hover state
        &:hover,
        &.k-state-hover {
            @include fill( contrast-wcag( $primary-button-bg ), $primary-button-bg, $primary-button-bg, none );
        }

        // Focused state
        &:focus,
        &.k-state-focused {
            box-shadow: $primary-button-focused-shadow;
        }

        // Actove state
        &:active,
        &.k-state-active {
            @include fill( contrast-wcag( $primary-button-bg ), $primary-button-bg, $primary-button-bg, none );
            box-shadow: none;
        }

        // Selected state
        &.k-state-selected {
            @include fill( contrast-wcag( $primary-button-bg ), $primary-button-bg, $primary-button-bg, none );
            box-shadow: none;
        }
    }

}




@include exports( "flat-button/theme" ) {

    // Flat button
    .k-button.k-flat,
    .k-button.k-bare {

        // Explicitly exclude flat button from button group styling
        &,
        .k-button-group & {
            color: inherit;
            background: none;
        }

        &::after {
            display: block;
        }

        &:focus,
        &.k-state-focused {

            &::after {
                box-shadow: inset 0 0 0 2px currentColor;
                opacity: .12;
            }
        }
    }
    .k-button.k-primary.k-flat,
    .k-button.k-primary.k-bare {

        // Explicitly exclude flat button from button group styling
        &,
        &:hover,
        &.k-state-hover,
        .k-button-group & {
            color: $accent;
            background: none;
        }
    }

}
