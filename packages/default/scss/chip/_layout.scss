@include exports("chip/layout") {

    // Chip
    .k-chip {
        padding: $kendo-chip-padding-y $kendo-chip-padding-x;
        border-width: $kendo-chip-border-width;
        border-style: solid;
        box-sizing: border-box;
        font-family: $font-family;
        font-size: $kendo-chip-font-size;
        line-height: $kendo-chip-line-height;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        gap: $kendo-chip-spacing;
        position: relative;
        overflow: hidden;
        cursor: pointer;
        user-select: none;

        &:focus,
        &.k-chip-focus {
            outline: 0;
        }
    }

    // Text
    .k-chip-text {
        min-width: 0;
        flex: 1 1 auto;
        white-space: nowrap;
    }

    // Icon
    .k-chip-icon,
    .k-chip-remove-icon {
        font-size: inherit;
    }

    // Sizes
    @each $size, $size-props in $kendo-chip-sizes {

        $_font-size: map-get( $size-props, font-size );
        $_line-height: map-get( $size-props, line-height );
        $_padding: map-get( $size-props, padding );
        $_size: calc( #{$line-height-xs * 1em} + #{$_padding * 2} + #{$kendo-chip-border-width * 2} );
        $_avatar-size: 1em;

        .k-chip-#{$size} {
            height: $_size;
            padding: $_padding;
            font-size: $_font-size;
            line-height: $_line-height;
        }

        .k-chip-avatar {
            width: $_avatar-size;
            height: $_avatar-size;
            flex-basis: $_avatar-size;
        }

    }

}

@include exports("chip/layout/list") {

    // Chip List
    .k-chip-list {
        display: inline-flex;

        > * {
            margin-right: $kendo-chips-margin;

            &:last-child {
                margin-right: 0;
            }
        }
    }

    .k-selection-single {
        .k-selected-icon-wrapper {
            display: none;
        }
    }

    .k-selection-multiple {
        .k-selected-icon-wrapper {
            width: 0;
            height: $kendo-chip-selected-icon-size;
            visibility: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            left: $kendo-chip-selected-icon-offset;
            z-index: 1;
        }

        .k-selected-icon {
            font-size: $kendo-chip-selected-icon-font-size;
        }

        .k-chip.k-state-selected .k-selected-icon-wrapper,
        .k-chip.k-selected .k-selected-icon-wrapper {
            width: $kendo-chip-selected-icon-size;
            visibility: visible;
        }

        > .k-chip-has-icon {
            .k-selected-icon-wrapper {
                border-radius: 50%;
                position: absolute;
            }
        }

        :not(.k-chip-has-icon) {
            .k-selected-icon-wrapper {
                left: $kendo-chip-selected-icon-no-icon-offset;
                transition: width .2s, opacity .2s;
                opacity: 0;
            }

            &.k-state-selected .k-selected-icon-wrapper,
            &.k-selected .k-selected-icon-wrapper {
                opacity: 1;
            }
        }
    }

}

@include exports("chip/layout/rtl") {

    .k-chip-list {
        &[dir="rtl"],
        .k-rtl &,
        &.k-rtl {
            > * {
                margin-right: 0;
                margin-left: $kendo-chips-margin;

                &:last-child {
                    margin-left: 0;
                }
            }
        }
    }

    .k-chip {
        &[dir="rtl"],
        .k-rtl &,
        &.k-rtl {
            .k-selection-multiple & {
                .k-selected-icon-wrapper {
                    right: $kendo-chip-selected-icon-offset;
                    left: 0;
                }

                &:not(.k-chip-has-icon) {
                    .k-selected-icon-wrapper {
                        right: $kendo-chip-selected-icon-no-icon-offset;
                        left: 0;
                    }
                }
            }
        }
    }

}
