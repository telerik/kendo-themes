@use "sass:map";
@use "../core/_index.scss" as *;
@use "./_variables.scss" as *;
@use "../icons/_variables.scss" as *;
@use "@progress/kendo-theme-core/scss/components/input/_layout.scss" as *;

@mixin kendo-input--layout() {

    @include kendo-input--layout-base();

    .k-input,
    .k-picker {

        &:focus,
        &.k-focus,
        &:focus-within {

            &::after {
                content: '';
                display: block;
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                border-width: $kendo-input-focus-border-width;
                border-style: solid;
                border-radius: inherit;
                pointer-events: none;
                z-index: 1;
            }
        }
    }

    // Solid and flat Numeric Textbox
    .k-numerictextbox.k-input-solid,
    .k-numerictextbox.k-input-flat  {

        .k-spinner-increase,
        .k-spinner-decrease {
            border: none;
        }
    }


    // Icon picker
    .k-icon-picker {
        > .k-input-inner {
            padding: 0;
            box-sizing: content-box;
            justify-content: center;
        }

        .k-value-icon {
            border: 0;
            border-radius: 0;
        }
    }

    // Input with icon styles
    .k-input-icon,
    .k-input-validation-icon,
    .k-input-loading-icon {
        padding-inline: $kendo-input-md-padding-y;
        padding-block: $kendo-input-md-padding-y;
    }

    // Input button
    .k-input-button {
        border-radius: 0;
        border-width: 0;
        border-color: inherit;
    }
    .k-input-outline .k-input-button {
        border-inline-start-width: $kendo-input-button-border-width;
    }


    // Input spinner
    .k-input-spinner {
        border-color: inherit;

        .k-spinner-increase,
        .k-spinner-decrease {
            border-radius: 0;
            border-color: inherit;
        }
    }


    // Fill mode
    .k-input-flat,
    .k-picker-flat {

        &:focus,
        &.k-focus,
        &:focus-within {

            &::after {
                border-width: 0 0 $kendo-input-focus-border-width;
            }

        }

        &.k-invalid,
        &.ng-invalid.ng-touched,
        &.ng-invalid.ng-dirty {

            &:focus,
            &.k-focus,
            &:focus-within {

                &::after {
                    border-width: 0 0 $kendo-input-focus-border-width;
                }
            }
        }
    }

    .k-input-flat,
    .k-input-outline {
        background: none !important; // stylelint-disable-line declaration-no-important
    }

    // Sizing
    @each $size, $size-props in $kendo-input-sizes {
        $_button-padding-x: map.get( $size-props, button-padding-x );
        $_button-padding-y: map.get( $size-props, button-padding-y );
        $_button-width: map.get( $size-props, button-width );
        $_icon-size: map.get( $size-props, icon-size );

        .k-input-#{$size},
        .k-picker-#{$size} {

            .k-input-values {
                padding: 0;
            }
            .k-input-values > .k-searchbar,
            .k-input-values > .k-input-inner {
                margin: 0;
            }

            .k-input-button {
                width: if( $kendo-use-input-button-width, var( --kendo-input-button-width, #{$_button-width} ), auto );
                padding-inline: $_button-padding-x;
                padding-block: $_button-padding-y;
            }

            .k-input-spinner {
                width: if( $kendo-use-input-spinner-width, var( --kendo-input-spinner-width, #{$_button-width} ), auto );

                .k-spinner-increase,
                .k-spinner-decrease {
                    padding-inline: $_button-padding-x;
                    padding-block: $_button-padding-y;
                }
            }

            &.k-icon-picker > .k-input-inner {
                width: var( --kendo-input-icon-picker-width, #{$_button-width} );
                height: auto;
                padding: 0;
            }

            // Clear value
            .k-clear-value {
                width: $_icon-size;
                height: $_icon-size;
                padding: 0;
                box-sizing: border-box;
            }

        }
    }
}
