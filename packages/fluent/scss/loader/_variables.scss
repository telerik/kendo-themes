@use "sass:math";
@use "sass:map";
@use "../core/color-system" as *;
@use "../core/_variables.scss" as *;

/// Border radius of the loader segment.
/// @group loader
$kendo-loader-segment-border-radius: 50% !default;

/// Size of the loader segment.
/// @group loader
$kendo-loader-segment-size-sm: map-get( $kendo-spacing, 1 ) !default;
$kendo-loader-segment-size-md: map-get( $kendo-spacing, 2 ) !default;
$kendo-loader-segment-size-lg: map-get( $kendo-spacing, 4 ) !default;

/// Horizontal padding of the loader.
/// @group loader
$kendo-loader-padding-x-sm: math.div( $kendo-loader-segment-size-sm, 2 ) !default;
$kendo-loader-padding-x-md: math.div( $kendo-loader-segment-size-md, 2 ) !default;
$kendo-loader-padding-x-lg: math.div( $kendo-loader-segment-size-lg, 2 ) !default;

/// Vertical padding of the loader.
/// @group loader
$kendo-loader-padding-y-sm: math.div( $kendo-loader-segment-size-sm, 2 ) !default;
$kendo-loader-padding-y-md: math.div( $kendo-loader-segment-size-md, 2 ) !default;
$kendo-loader-padding-y-lg: math.div( $kendo-loader-segment-size-lg, 2 ) !default;

/// Equilateral height of the loader.
/// @group loader
$kendo-loader-equilateral-height: .8660254038 !default;

/// Width of the spinner-3 loader.
/// @group loader
$kendo-loader-spinner-3-width-sm: ( $kendo-loader-segment-size-sm * 4 ) !default;
$kendo-loader-spinner-3-width-md: ( $kendo-loader-segment-size-md * 4 ) !default;
$kendo-loader-spinner-3-width-lg: ( $kendo-loader-segment-size-lg * 4 ) !default;

/// Height of the spinner-3 loader.
/// @group loader
$kendo-loader-spinner-3-height-sm: ( $kendo-loader-spinner-3-width-sm * $kendo-loader-equilateral-height ) !default;
$kendo-loader-spinner-3-height-md: ( $kendo-loader-spinner-3-width-md * $kendo-loader-equilateral-height ) !default;
$kendo-loader-spinner-3-height-lg: ( $kendo-loader-spinner-3-width-lg * $kendo-loader-equilateral-height ) !default;

/// Width of the spinner-4 loader.
/// @group loader
$kendo-loader-spinner-4-width-sm: ( $kendo-loader-segment-size-sm * 4 ) !default;
$kendo-loader-spinner-4-width-md: ( $kendo-loader-segment-size-md * 4 ) !default;
$kendo-loader-spinner-4-width-lg: ( $kendo-loader-segment-size-lg * 4 ) !default;

/// Height of the spinner-4 loader.
/// @group loader
$kendo-loader-spinner-4-height-sm: $kendo-loader-spinner-4-width-sm !default;
$kendo-loader-spinner-4-height-md: $kendo-loader-spinner-4-width-md !default;
$kendo-loader-spinner-4-height-lg: $kendo-loader-spinner-4-width-lg !default;

/// Border width of the container panel.
/// @group loader
$kendo-loader-container-panel-border-width: 1px !default;
/// Border style of the container panel.
/// @group loader
$kendo-loader-container-panel-border-style: solid !default;
/// Border color of the container panel.
/// @group loader
$kendo-loader-container-panel-border-color: var( --kendo-component-border, initial ) !default;
/// Border radius of the container panel.
/// @group loader
$kendo-loader-container-panel-border-radius: var( --kendo-border-radius-md, 0 ) !default;
/// Background color of the container panel.
/// @group loader
$kendo-loader-container-panel-bg: $white !default;

/// Horizontal padding of the loader container.
/// @group loader
$kendo-loader-container-padding-x-sm: map-get( $kendo-spacing, 4 ) !default;
$kendo-loader-container-padding-x-md: map-get( $kendo-spacing, 5 ) !default;
$kendo-loader-container-padding-x-lg: map-get( $kendo-spacing, 6 ) !default;

/// Vertical padding of the loader container.
/// @group loader
$kendo-loader-container-padding-y-sm: map-get( $kendo-spacing, 4 ) !default;
$kendo-loader-container-padding-y-md: map-get( $kendo-spacing, 5 ) !default;
$kendo-loader-container-padding-y-lg: map-get( $kendo-spacing, 6 ) !default;

/// Gap of the loader container.
/// @group loader
$kendo-loader-container-gap-sm: map-get( $kendo-spacing, 1 ) !default;
$kendo-loader-container-gap-md: map-get( $kendo-spacing, 2 ) !default;
$kendo-loader-container-gap-lg: map-get( $kendo-spacing, 3 ) !default;

/// Font size of the loader container.
/// @group loader
$kendo-loader-container-font-size-sm: var( --kendo-font-size-sm, inherit ) !default;
$kendo-loader-container-font-size-md: var( --kendo-font-size-md, inherit ) !default;
$kendo-loader-container-font-size-lg: var( --kendo-font-size-lg, inherit ) !default;

/// Theme variations for the loader.
$kendo-loader-brand-colors: (
    primary: primary,
    secondary: neutral,
    tertiary: tertiary,
    error: error,
    success: success,
    warning: warning,
    info: info
 );

 // Matrix with loader theme colors in the order: bg, color, border
$_tc-loader-matrix: (
    (normal: (100, null, null)),
);

$_tc-loader-dark-matrix: (
    (normal: (160, null, null)),
);

$_tc-loader-light-matrix: (
    (normal: (50, null, null)),
);

/// Theme colors map for the loader variations.
$kendo-loader-theme-colors: ();

@each $ui-states in $_tc-loader-matrix {
    @each $brand-color, $palette in $kendo-loader-brand-colors {
        $kendo-loader-theme-colors: map.deep-merge(
            $kendo-loader-theme-colors,
            generate-theme-variation( $brand-color, $palette, $ui-states )
        );
    };
}

@each $ui-states in $_tc-loader-dark-matrix {
    $kendo-loader-theme-colors: map.deep-merge(
        $kendo-loader-theme-colors,
        generate-theme-variation( dark, neutral, $ui-states )
    );
}

@each $ui-states in $_tc-loader-light-matrix {
    $kendo-loader-theme-colors: map.deep-merge(
        $kendo-loader-theme-colors,
        generate-theme-variation( light, neutral, $ui-states )
    );
}
