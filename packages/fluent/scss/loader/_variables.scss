@use "sass:map";
@use "sass:math";
@use "../core/" as *;

/// Border radius of the loader segment.
/// @group loader
$kendo-loader-segment-border-radius: 50% !default;

/// Size of the loader segment.
/// @group loader
$kendo-loader-sm-segment-size: map.get( $kendo-spacing, 1 ) !default;
$kendo-loader-md-segment-size: map.get( $kendo-spacing, 2 ) !default;
$kendo-loader-lg-segment-size: map.get( $kendo-spacing, 4 ) !default;

/// Horizontal padding of the loader.
/// @group loader
$kendo-loader-sm-padding-x: math.div( $kendo-loader-sm-segment-size, 2 ) !default;
$kendo-loader-md-padding-x: math.div( $kendo-loader-md-segment-size, 2 ) !default;
$kendo-loader-lg-padding-x: math.div( $kendo-loader-lg-segment-size, 2 ) !default;

/// Vertical padding of the loader.
/// @group loader
$kendo-loader-sm-padding-y: math.div( $kendo-loader-sm-segment-size, 2 ) !default;
$kendo-loader-md-padding-y: math.div( $kendo-loader-md-segment-size, 2 ) !default;
$kendo-loader-lg-padding-y: math.div( $kendo-loader-lg-segment-size, 2 ) !default;

/// Equilateral height of the loader.
/// @group loader
$kendo-loader-equilateral-height: .8660254038 !default;

/// Width of the spinner-3 loader.
/// @group loader
$kendo-loader-sm-spinner-3-width: ( $kendo-loader-sm-segment-size * 4 ) !default;
$kendo-loader-md-spinner-3-width: ( $kendo-loader-md-segment-size * 4 ) !default;
$kendo-loader-lg-spinner-3-width: ( $kendo-loader-lg-segment-size * 4 ) !default;

/// Height of the spinner-3 loader.
/// @group loader
$kendo-loader-sm-spinner-3-height: ( $kendo-loader-sm-spinner-3-width * $kendo-loader-equilateral-height ) !default;
$kendo-loader-md-spinner-3-height: ( $kendo-loader-md-spinner-3-width * $kendo-loader-equilateral-height ) !default;
$kendo-loader-lg-spinner-3-height: ( $kendo-loader-lg-spinner-3-width * $kendo-loader-equilateral-height ) !default;

/// Width of the spinner-4 loader.
/// @group loader
$kendo-loader-sm-spinner-4-width: ( $kendo-loader-sm-segment-size * 4 ) !default;
$kendo-loader-md-spinner-4-width: ( $kendo-loader-md-segment-size * 4 ) !default;
$kendo-loader-lg-spinner-4-width: ( $kendo-loader-lg-segment-size * 4 ) !default;

/// Height of the spinner-4 loader.
/// @group loader
$kendo-loader-sm-spinner-4-height: $kendo-loader-sm-spinner-4-width !default;
$kendo-loader-md-spinner-4-height: $kendo-loader-md-spinner-4-width !default;
$kendo-loader-lg-spinner-4-height: $kendo-loader-lg-spinner-4-width !default;

/// Border width of the container panel.
/// @group loader
$kendo-loader-container-panel-border-width: 1px !default;
/// Border style of the container panel.
/// @group loader
$kendo-loader-container-panel-border-style: solid !default;
/// Border color of the container panel.
/// @group loader
$kendo-loader-container-panel-border-color: var( --kendo-component-border, initial ) !default;
/// Border radius of the container panel.
/// @group loader
$kendo-loader-container-panel-border-radius: var( --kendo-border-radius-md, 0 ) !default;
/// Background color of the container panel.
/// @group loader
$kendo-loader-container-panel-bg: $kendo-color-white !default;

/// Horizontal padding of the loader container.
/// @group loader
$kendo-loader-sm-container-padding-x: map.get( $kendo-spacing, 4 ) !default;
$kendo-loader-md-container-padding-x: map.get( $kendo-spacing, 5 ) !default;
$kendo-loader-lg-container-padding-x: map.get( $kendo-spacing, 6 ) !default;

/// Vertical padding of the loader container.
/// @group loader
$kendo-loader-sm-container-padding-y: map.get( $kendo-spacing, 4 ) !default;
$kendo-loader-md-container-padding-y: map.get( $kendo-spacing, 5 ) !default;
$kendo-loader-lg-container-padding-y: map.get( $kendo-spacing, 6 ) !default;

/// Gap of the loader container.
/// @group loader
$kendo-loader-sm-container-gap: map.get( $kendo-spacing, 1 ) !default;
$kendo-loader-md-container-gap: map.get( $kendo-spacing, 2 ) !default;
$kendo-loader-lg-container-gap: map.get( $kendo-spacing, 3 ) !default;

/// Font size of the loader container.
/// @group loader
$kendo-loader-sm-container-font-size: var( --kendo-font-size-sm, inherit ) !default;
$kendo-loader-md-container-font-size: var( --kendo-font-size-md, inherit ) !default;
$kendo-loader-lg-container-font-size: var( --kendo-font-size-lg, inherit ) !default;

/// Theme variations for the loader.
$kendo-loader-brand-colors: (
    primary: primary,
    secondary: neutral,
    tertiary: tertiary,
    error: error,
    success: success,
    warning: warning,
    info: info
 ) !default;

 // Matrix with loader theme colors in the order: bg, color, border
$_tc-loader-matrix: (
    (normal: (100, null, null)),
) !default;

$_tc-loader-dark-matrix: (
    (normal: (160, null, null)),
) !default;

$_tc-loader-light-matrix: (
    (normal: (50, null, null)),
) !default;

/// Theme colors map for the loader variations.
$kendo-loader-theme-colors: () !default;

@each $ui-states in $_tc-loader-matrix {
    @each $brand-color, $palette in $kendo-loader-brand-colors {
        $kendo-loader-theme-colors: map.deep-merge(
            $kendo-loader-theme-colors,
            generate-theme-variation( $brand-color, $palette, $ui-states )
        );
    };
}

@each $ui-states in $_tc-loader-dark-matrix {
    $kendo-loader-theme-colors: map.deep-merge(
        $kendo-loader-theme-colors,
        generate-theme-variation( dark, neutral, $ui-states )
    );
}

@each $ui-states in $_tc-loader-light-matrix {
    $kendo-loader-theme-colors: map.deep-merge(
        $kendo-loader-theme-colors,
        generate-theme-variation( light, neutral, $ui-states )
    );
}
