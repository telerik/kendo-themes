@use "sass:map";
@use "../core/_index.scss" as *;

/// The border width of the Avatar.
/// @group avatar
$kendo-avatar-border-width: 1px !default;

/// The font family of the Avatar.
/// @group avatar
$kendo-avatar-font-family: var( --kendo-font-family, inherit ) !default;
/// The font size of the Avatar.
/// @group avatar
$kendo-avatar-font-size: var( --kendo-font-size, inherit ) !default;
/// The line height of the Avatar.
/// @group avatar
$kendo-avatar-line-height: var( --kendo-line-height, inherit ) !default;

/// The sizes map of the Avatar.
/// @group avatar
$kendo-avatar-sizes: (
    sm: k-spacing(4),
    md: k-spacing(8),
    lg: k-spacing(16)
) !default;

/// The theme variations for the Avatar.
/// @group avatar
$kendo-avatar-brand-colors: (
    primary: primary,
    error: error,
    success: success,
    info: info,
    secondary: secondary,
    tertiary: tertiary,
 ) !default;

// Matrices with Avatar theme colors in the order: bg, color, border
$_tc-avatar-matrix: (
    solid: (
        normal: (color, on-color, color)
    ),
    outline: (
        normal: (on-color, color, color)
    )
) !default;

$_tc-avatar-warning-matrix: (
    solid: (
        normal: (color, on-color, color)
    ),
    outline: (
        normal: (app-surface, color, color)
    )
) !default;

$_tc-avatar-dark-matrix: (
    solid: (
        normal: (color, on-color, color)
    ),
    outline: (
        normal: (on-color, color, color)
    )
) !default;

$_tc-avatar-light-matrix: (
    solid: (
        normal: (color, on-color, color)
    ),
    outline: (
        normal: (app-surface, color, color)
    )
) !default;

/// The theme colors map for the Avatar variations.
/// @group avatar
$kendo-avatar-theme-colors: () !default;

@each $fill-mode, $ui-states in $_tc-avatar-matrix {
    @each $brand-color, $palette in $kendo-avatar-brand-colors {
        $kendo-avatar-theme-colors: map.deep-merge(
            $kendo-avatar-theme-colors,
            k-generate-fill-mode-theme-variation( $fill-mode, $brand-color, $palette, $ui-states )
        );
    };
}

@each $fill-mode, $ui-states in $_tc-avatar-warning-matrix {
    $kendo-avatar-theme-colors: map.deep-merge(
        $kendo-avatar-theme-colors,
        k-generate-fill-mode-theme-variation( $fill-mode, warning, warning, $ui-states )
    );
}

@each $fill-mode, $ui-states in $_tc-avatar-dark-matrix {
    $kendo-avatar-theme-colors: map.deep-merge(
        $kendo-avatar-theme-colors,
        k-generate-fill-mode-theme-variation( $fill-mode, dark, dark, $ui-states )
    );
}

@each $fill-mode, $ui-states in $_tc-avatar-light-matrix {
    $kendo-avatar-theme-colors: map.deep-merge(
        $kendo-avatar-theme-colors,
        k-generate-fill-mode-theme-variation( $fill-mode, light, light, $ui-states )
    );
}
