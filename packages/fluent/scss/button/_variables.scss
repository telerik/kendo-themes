@use "sass:color";
@use "sass:map";
@use "../core/" as *;

/// Width of the border around the button.
/// @group button
$kendo-button-border-width: 1px !default;

/// Horizontal padding of the button.
/// @group button
$kendo-button-sm-padding-x: map.get( $kendo-spacing, 5 ) !default;
$kendo-button-md-padding-x: map.get( $kendo-spacing, 5 ) !default;
$kendo-button-lg-padding-x: map.get( $kendo-spacing, 5 ) !default;

/// Vertical padding of the button.
/// @group button
$kendo-button-sm-padding-y: map.get( $kendo-spacing, 1 ) !default;
$kendo-button-md-padding-y: map.get( $kendo-spacing, 1.5 ) !default;
$kendo-button-lg-padding-y: map.get( $kendo-spacing, 2 ) !default;

/// Font sizes of the button.
/// @group button
$kendo-button-sm-font-size: var( --kendo-font-size, inherit ) !default;
$kendo-button-md-font-size: var( --kendo-font-size, inherit ) !default;
$kendo-button-lg-font-size: var( --kendo-font-size, inherit ) !default;

/// Line heights used along with $kendo-font-size.
/// @group button
$kendo-button-sm-line-height: var( --kendo-line-height, normal ) !default;
$kendo-button-md-line-height: var( --kendo-line-height, normal ) !default;
$kendo-button-lg-line-height: var( --kendo-line-height, normal ) !default;

// Font family of the button.
$kendo-button-font-family: var( --kendo-font-family, inherit ) !default;

// Font weight of the button.
$kendo-button-font-weight: var( --kendo-font-weight-bold, normal ) !default;

/// Calculated height of the button.
/// @group button
$kendo-button-calc-size: calc( ( #{$kendo-button-md-line-height} * 1em ) + ( #{$kendo-button-md-padding-y} * 2 ) + ( #{$kendo-button-border-width} * 2 ) ) !default;
$kendo-button-sm-calc-size: calc( ( #{$kendo-button-sm-line-height} * 1em ) + ( #{$kendo-button-sm-padding-y} * 2 ) + ( #{$kendo-button-border-width} * 2 ) ) !default;
$kendo-button-md-calc-size: calc( ( #{$kendo-button-md-line-height} * 1em ) + ( #{$kendo-button-md-padding-y} * 2 ) + ( #{$kendo-button-border-width} * 2 ) ) !default;
$kendo-button-lg-calc-size: calc( ( #{$kendo-button-lg-line-height} * 1em ) + ( #{$kendo-button-lg-padding-y} * 2 ) + ( #{$kendo-button-border-width} * 2 ) ) !default;

/// Calculated inner height of the button. Without the border width.
/// @group button
$kendo-button-inner-calc-size: calc( ( #{$kendo-button-md-line-height} * 1em ) + ( #{$kendo-button-md-padding-y} * 2 ) ) !default;
$kendo-button-sm-inner-calc-size: calc( ( #{$kendo-button-sm-line-height} * 1em ) + ( #{$kendo-button-sm-padding-y} * 2 ) ) !default;
$kendo-button-md-inner-calc-size: calc( ( #{$kendo-button-md-line-height} * 1em ) + ( #{$kendo-button-md-padding-y} * 2 ) ) !default;
$kendo-button-lg-inner-calc-size: calc( ( #{$kendo-button-lg-line-height} * 1em ) + ( #{$kendo-button-lg-padding-y} * 2 ) ) !default;

/// Sizes map for the button.
/// @group button
$kendo-button-sizes: (
    sm: (
        padding-x: $kendo-button-sm-padding-x,
        padding-y: $kendo-button-sm-padding-y,
        font-size: $kendo-button-sm-font-size,
        line-height: $kendo-button-sm-line-height
    ),
    md: (
        padding-x: $kendo-button-md-padding-x,
        padding-y: $kendo-button-md-padding-y,
        font-size: $kendo-button-md-font-size,
        line-height: $kendo-button-md-line-height
    ),
    lg: (
        padding-x: $kendo-button-lg-padding-x,
        padding-y: $kendo-button-lg-padding-y,
        font-size: $kendo-button-lg-font-size,
        line-height: $kendo-button-lg-line-height
    )
) !default;

/// Content spacing of the button.
/// @group button
$kendo-button-spacing: map.get( $kendo-spacing, 2 ) !default;

/// Offset of the focused button.
/// @group button
$kendo-button-focus-offset: map.get( $kendo-spacing, 0.5 ) !default; // sass-lint:disable-line leading-zero
/// Outline width of the focused button.
/// @group button
$kendo-button-focus-outline-width: 1px !default;
/// Outline style of the focused button.
/// @group button
$kendo-button-focus-outline-style: solid !default;

/// Offset of the flat focused button.
/// @group button
$kendo-button-flat-focus-offset: 1px !default;
/// Outline width of the flat focused button.
/// @group button
$kendo-button-flat-focus-outline-width: map.get( $kendo-spacing, 0.5 ) !default; // sass-lint:disable-line leading-zero

/// Offset of the link focused button.
/// @group button
$kendo-button-link-focus-offset: 0 !default;
/// Outline width of the flat focused button.
/// @group button
$kendo-button-link-focus-outline-width: 1px !default;

// Theme variations for the button.

$kendo-button-brand-colors: (
    primary: primary,
    error: error,
    success: success,
    info: info,
    secondary: neutral,
    tertiary: tertiary,
) !default;


// Matrices with theme colors in the order: bg, color, border, outline

// Color matrix for the base button
$_tc-base-matrix: (
    solid: (
        normal: ($kendo-color-white, 160, 110),
        hover: (20, 190, 110),
        focus: ($kendo-color-white, 160, 110, 130),
        focus-hover: (20, 190, 110, 130),
        active: (30, 190, 110),
        active-hover: (20, 190, 110),
        disabled: (var( --kendo-disabled-bg, inherit ), var( --kendo-disabled-text, inherit ), var( --kendo-disabled-border, inherit ))
    ),
    outline: (
        normal: (transparent, 160, currentColor),
        hover: (190, $kendo-color-white, 190),
        focus: (transparent, 160, currentColor, inherit),
        focus-hover: (190, $kendo-color-white, 190, inherit),
        active: (190, $kendo-color-white, 190),
        active-hover: (20, 190, 110),
        disabled: (initial, var( --kendo-disabled-text, inherit ), 90)
    ),
    link: (
        normal: (transparent, 160, transparent),
        hover: (transparent, 190, transparent),
        focus: (transparent, 160, transparent, 30),
        focus-hover: (transparent, 190, 30, transparent),
        active: (transparent, 190, transparent),
        active-hover: (transparent, 190, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    ),
    clear: (
        normal: (transparent, 160, transparent),
        hover: (transparent, 190, transparent),
        focus: (30, 160, transparent, 130),
        focus-hover: (transparent, 190, transparent, 130),
        active: (transparent, 190, transparent),
        active-hover: (transparent, 190, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    )
) !default;

// Color matrix for primary, error, success, info, secondary, tertiary buttons
$_tc-brand-matrix: (
    solid: (
        normal: (100, $kendo-color-white, 100),
        hover: (110, $kendo-color-white, 110),
        focus: (100, $kendo-color-white, 100, inherit),
        focus-hover: (110, $kendo-color-white, 110, inherit),
        active: (120, $kendo-color-white, 120),
        active-hover: (110, $kendo-color-white, 110),
        disabled: (var( --kendo-disabled-bg, inherit ), var( --kendo-disabled-text, inherit ), var( --kendo-disabled-border, inherit ))
    ),
    flat: (
        normal: (initial, 100, transparent),
        hover: (10, 110, transparent),
        focus: (initial, 100, transparent, 30),
        focus-hover: (10, 110, transparent, 30),
        active: (20, 110, transparent),
        active-hover: (10, 110, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), initial)
    ),
    outline: (
        normal: (transparent, 100, currentColor),
        hover: (100, $kendo-color-white, 100),
        focus: (transparent, 100, 100, inherit),
        focus-hover: (100, $kendo-color-white, 100, inherit),
        active: (100, $kendo-color-white, 100),
        active-hover: (100, $kendo-color-white, 100),
        disabled: (initial, var( --kendo-disabled-text, inherit ), var( --kendo-disabled-text, inherit ))
    ),
    link: (
        normal: (transparent, 100, transparent),
        hover: (transparent, 130, transparent),
        focus: (transparent, 100, transparent, 30),
        focus-hover: (transparent, 130, transparent, 30),
        active: (transparent, 140, transparent),
        active-hover: (transparent, 130, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    ),
    clear: (
        normal: (transparent, 100, transparent),
        hover: (transparent, 110, transparent),
        focus: (20, 100, transparent),
        focus-hover: (transparent, 110, transparent),
        active: (transparent, 120, transparent),
        active-hover: (transparent, 110, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    )
) !default;

// Color matrix for warning buttons
$_tc-warning-matrix: (
    solid: (
        normal: (100, get-theme-color-var( neutral-160 ), 100),
        hover: (110, get-theme-color-var( neutral-190 ), 110),
        focus: (100, get-theme-color-var( neutral-160 ), 100, $kendo-color-white),
        focus-hover: (110, get-theme-color-var( neutral-190 ), 110, $kendo-color-white),
        active: (120, get-theme-color-var( neutral-190 ), 120),
        active-hover: (110, get-theme-color-var( neutral-190 ), 110),
        disabled: (var( --kendo-disabled-bg, inherit ), var( --kendo-disabled-text, inherit ), var( --kendo-disabled-border, inherit ))
    ),
    flat: (
        normal: (initial, 100, transparent),
        hover: (10, 110, transparent),
        focus: (initial, 100, transparent, 30),
        focus-hover: (10, 110, transparent, 30),
        active: (20, 110, transparent),
        active-hover: (10, 110, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), initial)
    ),
    outline: (
        normal: (transparent, 100, currentColor),
        hover: (100, $kendo-color-black, 100),
        focus: (transparent, 100, 100, inherit),
        focus-hover: (100, $kendo-color-black, 100, inherit),
        active: (100, $kendo-color-black, 100),
        active-hover: (100, $kendo-color-black, 100),
        disabled: (initial, var( --kendo-disabled-text, inherit ), var( --kendo-disabled-text, inherit ))
    ),
    link: (
        normal: (transparent, 100, transparent),
        hover: (transparent, 130, transparent),
        focus: (transparent, 100, 30),
        focus-hover: (transparent, 130, transparent, 30),
        active: (transparent, 140, transparent),
        active-hover: (transparent, 130, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    ),
    clear: (
        normal: (transparent, 100, transparent),
        hover: (transparent, 110, transparent),
        focus: (20, 100, transparent),
        focus-hover: (transparent, 110, transparent),
        active: (transparent, 120, transparent),
        active-hover: (transparent, 110, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    )
) !default;

// Color matrix for dark buttons
$_tc-dark-matrix: (
    solid: (
        normal: (160, $kendo-color-white, 160),
        hover: (170, $kendo-color-white, 170),
        focus: (160, $kendo-color-white, 160, $kendo-color-white),
        focus-hover: (170, $kendo-color-white, 170, $kendo-color-white),
        active: (180, $kendo-color-white, 180),
        active-hover: (170, $kendo-color-white, 170),
        disabled: (var( --kendo-disabled-bg, inherit ), var( --kendo-disabled-text, inherit ), var( --kendo-disabled-border, inherit ))
    ),
    flat: (
        normal: (initial, 160, transparent),
        hover: (10, 170, transparent),
        focus: (initial, 160, transparent, 30),
        focus-hover: (10, 170, transparent, 30),
        active: (20, 170, transparent),
        active-hover: (10, 170, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), initial)
    ),
    outline: (
        normal: (transparent, 160, currentColor),
        hover: (160, $kendo-color-white, 160),
        focus: (transparent, 160, 160, inherit),
        focus-hover: (160, $kendo-color-white, 160, inherit),
        active: (160, $kendo-color-white, 160),
        active-hover: (160, $kendo-color-white, 160),
        disabled: (initial, var( --kendo-disabled-text, inherit ), var( --kendo-disabled-text, inherit ))
    ),
    link: (
        normal: (transparent, 160, transparent),
        hover: (transparent, 170, transparent),
        focus: (transparent, 160, 30),
        focus-hover: (transparent, 170, transparent, 30),
        active: (transparent, 170, transparent),
        active-hover: (transparent, 170, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    ),
    clear: (
        normal: (transparent, 160, transparent),
        hover: (transparent, 170, transparent),
        focus: (20, 160, transparent),
        focus-hover: (transparent, 170, transparent),
        active: (transparent, 170, transparent),
        active-hover: (transparent, 170, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    )
) !default;

// Color matrix for light buttons
$_tc-light-matrix: (
    solid: (
        normal: (50, 160, 50),
        hover: (60, 190, 60),
        focus: (50, 160, 50, $kendo-color-white),
        focus-hover: (60, 190, 60, $kendo-color-white),
        active: (70, 190, 70),
        active-hover: (60, 190, 60),
        disabled: (var( --kendo-disabled-bg, inherit ), var( --kendo-disabled-text, inherit ), var( --kendo-disabled-border, inherit ))
    ),
    flat: (
        normal: (initial, 50, transparent),
        hover: (10, 60, transparent),
        focus: (initial, 50, transparent, 30),
        focus-hover: (10, 60, transparent, 30),
        active: (20, 60, transparent),
        active-hover: (10, 60, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), initial)
    ),
    outline: (
        normal: (transparent, 50, currentColor),
        hover: (50, $kendo-color-white, 50),
        focus: (transparent, 50, 50, inherit),
        focus-hover: (50, $kendo-color-white, 50, inherit),
        active: (50, $kendo-color-white, 50),
        active-hover: (50, $kendo-color-white, 50),
        disabled: (initial, var( --kendo-disabled-text, inherit ), var( --kendo-disabled-text, inherit ))
    ),
    link: (
        normal: (transparent, 50, transparent),
        hover: (transparent, 60, transparent),
        focus: (transparent, 50, 30),
        focus-hover: (transparent, 60, transparent, 30),
        active: (transparent, 60, transparent),
        active-hover: (transparent, 60, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    ),
    clear: (
        normal: (transparent, 50, transparent),
        hover: (transparent, 60, transparent),
        focus: (20, 50, transparent),
        focus-hover: (transparent, 60, transparent),
        active: (transparent, 60, transparent),
        active-hover: (transparent, 60, transparent),
        disabled: (initial, var( --kendo-disabled-text, inherit ), transparent)
    )
) !default;

/// Theme colors map for the button.
$kendo-button-theme-colors: () !default;

// Map for base theme color
@each $fill-mode, $ui-states in $_tc-base-matrix {
    $kendo-button-theme-colors: map.deep-merge(
        $kendo-button-theme-colors,
        generate-fill-mode-theme-variation( $fill-mode, base, neutral, $ui-states )
    );
}

// Map for brand theme colors
@each $fill-mode, $ui-states in $_tc-brand-matrix {
    @each $brand-color, $palette in $kendo-button-brand-colors {
        $kendo-button-theme-colors: map.deep-merge(
            $kendo-button-theme-colors,
            generate-fill-mode-theme-variation( $fill-mode, $brand-color, $palette, $ui-states )
        )
    }
}

// Map for warning theme colors
@each $fill-mode, $ui-states in $_tc-warning-matrix {
    $kendo-button-theme-colors: map.deep-merge(
        $kendo-button-theme-colors,
        generate-fill-mode-theme-variation( $fill-mode, warning, warning, $ui-states )
    );
}

// Map for dark theme colors
@each $fill-mode, $ui-states in $_tc-dark-matrix {
    $kendo-button-theme-colors: map.deep-merge(
        $kendo-button-theme-colors,
        generate-fill-mode-theme-variation( $fill-mode, dark, neutral, $ui-states )
    );
}

// Map for light theme colors
@each $fill-mode, $ui-states in $_tc-light-matrix {
    $kendo-button-theme-colors: map.deep-merge(
        $kendo-button-theme-colors,
        generate-fill-mode-theme-variation( $fill-mode, light, neutral, $ui-states )
    );
}
