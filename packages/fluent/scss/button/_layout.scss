@use "sass:map";
@use "sass:math";
@use "../core/" as *;
@use "./_variables.scss" as *;

@mixin kendo-button--layout() {

    // Button
    .k-button {
        padding-inline: var( --INTERNAL--kendo-button-padding-x, 0 );
        padding-block: var( --INTERNAL--kendo-button-padding-y, 0 );
        border-width: var( --kendo-button-border-width, #{$kendo-button-border-width} );
        border-style: solid;
        box-sizing: border-box;
        font-family: var( --kendo-button-font-family, #{$kendo-button-font-family} );
        font-size: var( --INTERNAL--kendo-button-font-size, 1rem );
        font-weight: var( --kendo-button-font-weight, #{$kendo-button-font-weight} );
        line-height: var( --INTERNAL--kendo-button-line-height, normal );
        text-align: center;
        white-space: nowrap;
        text-decoration: none;
        vertical-align: middle;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        gap: var( --kendo-button-spacing, #{$kendo-button-spacing} );
        position: relative;
        cursor: pointer;
        color: inherit;
        background: none;
        outline: none;
        user-select: none;
        -webkit-appearance: none;

        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        &::-moz-focus-inner {
            padding: 0;
            outline: 0;
            border: 0;
        }

        &:hover,
        &:focus {
            outline: 0;
            text-decoration: none;
        }

        &:focus::after,
        &.k-focus::after {
            content: "";
            position: absolute;
            border: medium none;
            inset: var( --kendo-button-focus-offset, #{$kendo-button-focus-offset} );
            outline-width: var( --kendo-button-focus-outline-width, #{$kendo-button-focus-outline-width} );
            outline-style: var( --kendo-button-focus-outline-style, #{$kendo-button-focus-outline-style} );
            z-index: 1;
        }

        // Fix for focused button with full roundness
        &.k-rounded-full {
            &:focus::after,
            &.k-focus::after {
               border-radius: inherit;
            }
        }
    }


    // Sizing
    @each $size, $size-props in $kendo-button-sizes {
        $_padding-x: map.get( $size-props, padding-x );
        $_padding-y: map.get( $size-props, padding-y );
        $_font-size: map.get( $size-props, font-size );
        $_line-height: map.get( $size-props, line-height );

        $_icon-button-padding: math.div( $_padding-x, 2 );

        .k-button-#{$size} {
            --INTERNAL--kendo-button-padding-x: var( --kendo-button-#{$size}-padding-x, #{$_padding-x} );
            --INTERNAL--kendo-button-padding-y: var( --kendo-button-#{$size}-padding-y, #{$_padding-y} );
            --INTERNAL--kendo-button-font-size: var( --kendo-button-#{$size}-font-size, #{$_font-size} );
            --INTERNAL--kendo-button-line-height: var( --kendo-button-#{$size}-line-height, #{$_line-height} );
        }

        .k-icon-button.k-button-#{$size} {
            --INTERNAL--kendo-button-padding-x: var( --kendo-icon-button-#{$size}-padding-y, #{$_padding-y} );
            --INTERNAL--kendo-button-padding-y: var( --kendo-icon-button-#{$size}-padding-y, #{$_padding-y} );

            .k-button-icon {
                min-width: calc( #{$_font-size} * #{$_line-height} );
                min-height: calc( #{$_font-size} * #{$_line-height} );
                display: inline-flex;
                align-items: center;
                justify-content: center;

                &.k-svg-icon > svg,
                &.k-icon-md > svg {
                    width: var( --kendo-icon-size-md, 1rem );
                    height: var( --kendo-icon-size-md, 1rem );
                }

                &.k-icon-xs > svg {
                    width: var( --kendo-icon-size-sm, 0.75rem );
                    height: var( --kendo-icon-size-sm, 0.75rem )s;
                }

                &.k-icon-sm > svg {
                    width: var( --kendo-icon-size-sm, 0.875rem );
                    height: var( --kendo-icon-size-sm, 0.875rem );
                }

                &.k-icon-lg > svg {
                    width: var( --kendo-icon-size-lg, 1.25rem );
                    height: var( --kendo-icon-size-lg, 1.25rem );
                }

                &.k-icon-xl > svg {
                    width: var( --kendo-icon-size-xl, 1.5rem );
                    height: var( --kendo-icon-size-xl, 1.5rem );
                }

                &.k-icon-xxl > svg {
                    width: var( --kendo-icon-size-xxl, 2rem );
                    height: var( --kendo-icon-size-xxl, 2rem );
                }

                &.k-icon-xxxl > svg {
                    width: var( --kendo-icon-size-xxl, 3rem );
                    height: var( --kendo-icon-size-xxl, 3rem );
                }
            }
        }
    }

    // Icon Button
    .k-icon-button {
        gap: 0;

        .k-icon {
            display: inline-flex;
        }
    }


    // Content
    .k-button-icon {
        align-self: center;
        position: relative;
        color: inherit;
    }


    // Flat button
    .k-button-flat {
        color: inherit;
        border-color: transparent !important; // sass-lint:disable-line no-important
        box-shadow: none;

        &:focus::after,
        &.k-focus::after {
            @include border-radius( inherit );
            inset: var( --kendo-button-flat-focus-offset, #{$kendo-button-flat-focus-offset} );
            outline-width: var( --kendo-button-flat-focus-outline-width, #{$kendo-button-flat-focus-outline-width} );
        }
    }

    .k-button-flat-base {
        color: inherit;
        background: none !important;
        border-color: transparent !important;

        // Overlay
        &::before {
            @include border-radius( inherit );
            content: "";
            background: currentColor;
            opacity: 0;
            display: block;
            pointer-events: none;
            position: absolute;
            left: -$kendo-button-border-width;
            right: -$kendo-button-border-width;
            top: -$kendo-button-border-width;
            bottom: -$kendo-button-border-width;
            z-index: 0;
            transition: opacity .2s ease-in-out;
        }

        // Hovered state
        &:hover,
        &.k-hover {
            &::before {
                opacity: .05;
            }
        }

        // Focused state
        &:focus,
        &.k-focus {
            &::before {
                opacity: 0;
            }

            &::after {
                outline-color: currentColor !important;
                opacity: .13;
            }

            // Focus and hovered state
            &:hover,
            &.k-hover {
                &::before {
                    opacity: .05;
                }
            }
        }

        &.k-no-focus:not(:hover),
        &.k-no-focus:not(.k-hover) {
            &::before {
                opacity: 0;
            }
        }

        // Active state
        &:active,
        &.k-active {
            &::before {
                opacity: .08;
            }

            // Active and hovered state
            &:hover,
            &.k-hover {
                &::before {
                    opacity: .05;
                }
            }
        }

        // Selected state
        &.k-selected {
            &::before {
                opacity: .08;
            }

            // Selected and hovered state
            &:hover,
            &.k-hover {
                &::before {
                    opacity: .05;
                }
            }
        }

        &.k-disabled {
            color: var( --kendo-disabled-text, inherit );
        }
    }


    // Outline button
    .k-button-outline {
        color: inherit;
        border-color: currentColor;
        background: none;
    }

    // Link button
    .k-button-link {
        border-color: transparent !important; // sass-lint:disable-line no-important
        text-decoration: none;
        background: none;

        &:focus::after,
        &.k-focus::after {
            @include border-radius( inherit );
            inset: var( --kendo-button-link-focus-offset, #{$kendo-button-link-focus-offset} );
            outline-width: var( --kendo-button-link-focus-outline-width, #{$kendo-button-link-focus-outline-width} );
        }

        &:hover,
        &.k-hover,
        &:focus,
        &.k-focus {
            text-decoration: underline;
        }
    }


    // Clear button
    .k-button-clear {
        border-color: transparent !important; // sass-lint:disable-line no-important
        color: inherit;
        background: none;

        &:focus::after,
        &.k-focus::after {
            inset: auto;
            outline-width: 0;
        }
    }


    // Button group
    .k-button-group {
        margin: 0;
        padding: 0;
        border-width: 0;
        box-sizing: border-box;
        list-style: none;
        outline: 0;
        display: inline-flex;
        flex-flow: row nowrap;
        vertical-align: middle;
        position: relative;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: $kendo-color-rgba-transparent;

        > .k-button + .k-button {
            margin-inline-start: if( $kendo-button-border-width == 0, null, -$kendo-button-border-width );
        }

        > .k-button:hover,
        > .k-button.k-hover,
        > .k-button:focus,
        > .k-button.k-focus,
        > .k-button:active,
        > .k-button.k-active,
        > .k-button.k-selected {
            z-index: 2;
        }

        .k-button:not(:first-child):not(:last-child) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
        > .k-button:first-child:not(:only-child) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
        > .k-button:last-child:not(:only-child) {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }

        &:disabled,
        &[disabled],
        &.k-disabled {
            opacity: 1;
            filter: none;
        }
    }

    .k-button-group-stretched {
        width: 100%;

        > * {
            flex: 1 0 0%;
            overflow: hidden;
        }
    }
}
