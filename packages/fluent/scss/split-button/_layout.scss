@use "sass:map";
@use "./_variables.scss" as *;
@use "../button/_variables.scss" as *;
@use "@progress/kendo-theme-core/scss/components/split-button/_layout.scss" as *;

@mixin kendo-split-button--layout() {
    @include kendo-split-button--layout-base();

    .k-split-button {
        > .k-button:first-child {
            border-inline-end-width: 0;
        }

        > .k-button:last-child {
            border-inline-start-width: 0;
        }
    }

    .k-split-button-arrow {
        .k-button-icon {
            &::after {
                content:"";
                width: $kendo-split-button-arrow-delimiter-line-size;
                height: $kendo-split-button-arrow-delimiter-size;
                position: absolute;
                top: calc( ( 100% - #{$kendo-split-button-arrow-delimiter-size} ) / 2 );
                background: $kendo-split-button-arrow-delimiter-bg;
                z-index: 2;
            }
        }

        @each $size, $size-props in $kendo-split-button-sizes {
            &.k-button-#{$size} {
                .k-button-icon {
                    &::after {
                        inset-inline-start: calc( #{$size-props} * -1 );
                    }
                }
            }
        }
    }

    // Sizes
    @each $size, $size-props in $kendo-button-sizes {
        $_font-size: map.get( $size-props, font-size );
        $_line-height: map.get( $size-props, line-height );

        .k-button-#{$size}.k-split-button-arrow {
            .k-button-icon {
                min-width: calc( #{$_font-size} * #{$_line-height} );
            }
        }
    }
}


