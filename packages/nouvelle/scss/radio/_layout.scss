@mixin kendo-radio--layout() {

    .k-radio {
        margin: 0;
        padding: 0;
        width: var( --kendo-radio-width, 1em );
        height: var( --kendo-radio-height, 1em );
        line-height: initial;
        border-width: var( --kendo-radio-border-width, #{k-if-var( $kendo-radio-border-width, 1px )} );
        border-style: solid;
        border-radius: var( --kendo-radio-border-radius, #{k-if-var( $kendo-radio-border-radius, 50% )} );
        outline: 0;
        box-sizing: border-box;
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        display: inline-block;
        flex: none;
        vertical-align: middle;
        position: relative;
        cursor: pointer;
        -webkit-appearance: none;
    }


    // Radio indicator
    .k-radio::before {
        content: if( $kendo-radio-indicator-type == "glyph", var( --kendo-radio-checked-glyph, #{k-if-var( $kendo-radio-checked-glyph, "" )} ), "" );
        width: var( --kendo-radio-indicator-size, 100% );
        height: var( --kendo-radio-indicator-size, 100% );
        border-width: 0;
        border-radius: var( --kendo-radio-indicator-border-radius, #{k-if-var( $kendo-radio-indicator-border-radius, 0 )} );
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        display: flex;
        place-content: center;
        place-items: center;
        overflow: hidden;

        @if $kendo-radio-indicator-type == "image" {
            background-image: var( --kendo-radio-checked-image, #{k-if-var( $kendo-radio-checked-image, none )} );
        }

        @if $kendo-radio-indicator-type == "pseudo" {
            background-color: currentColor;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0);
        }

        @if $kendo-radio-indicator-type == "glyph" {
            font-family: var( --kendo-radio-glyph-font-family, #{$kendo-radio-glyph-font-family} );
            font-size: var( --kendo-radio-glyph-size, 1em );
            line-height: 1;
            transform: translate(-50%, -50%) scale(0);
            position: absolute;
            top: 50%;
            left: 50%;
        }
    }


    // Hover state
    .k-radio:hover,
    .k-radio.k-hover {

        // Indicator
        &::before {
            @if $kendo-radio-indicator-type == "image" {
                background-image: var( --kendo-radio-hover-image, #{k-if-var( $kendo-radio-hover-image, none )} );
            }

            @if $kendo-radio-indicator-type == "pseudo" {
                transform: translate(-50%, -50%) scale(1);
            }

            @if $kendo-radio-indicator-type == "glyph" {
                transform: translate(-50%, -50%) scale(1);
            }
        }
    }


    // Focus state
    .k-radio:focus,
    .k-radio.k-focus {

    }


    // Checked state
    .k-radio:checked,
    .k-radio.k-checked {

        // Indicator
        &::before {
            @if $kendo-radio-indicator-type == "image" {
                background-image: var( --kendo-radio-checked-image, #{k-if-var( $kendo-radio-checked-image, none )} );
            }

            @if $kendo-radio-indicator-type == "pseudo" {
                transform: translate(-50%, -50%) scale(1);
            }

            @if $kendo-radio-indicator-type == "glyph" {
                transform: translate(-50%, -50%) scale(1);
            }
        }
    }


    // Disabled state
    .k-radio:disabled:checked,
    .k-radio.k-disabled.k-checked {

        // Indicator
        &::before {
            @if $kendo-radio-indicator-type == "image" {
                background-image: var( --kendo-radio-disabled-checked-image, #{k-if-var( $kendo-radio-disabled-checked-image, none )} );
            }
        }
    }


    // Radio wrap
    .k-radio-wrap {
        flex: none;
        display: inline-flex;
        flex-flow: row nowrap;
        gap: 0;
        align-items: center;
        align-self: start;
        vertical-align: middle;
        position: relative;

        &::before {
            content: "\200b";
            width: 0;
            overflow: hidden;
            flex: none;
            display: inline-block;
            vertical-align: top;
        }
    }


    // Radio label
    .k-radio-label {
        margin: 0;
        padding: 0;
        display: inline-flex;
        align-items: flex-start;
        vertical-align: middle;
        position: relative;
        cursor: pointer;

        .k-ripple {
            // Hide ripple temporarily
            visibility: hidden !important; // stylelint-disable-line declaration-no-important
        }
    }


    // Empty label
    .k-radio-label:empty {
        display: none !important; // stylelint-disable-line declaration-no-important
    }
    .k-radio-label.k-no-text {
        min-width: 1px;
    }


    // Radio list
    .k-radio-list {
        margin: 0;
        padding: 0;
        display: flex;
        flex-flow: column nowrap;
        gap: 0;
        list-style: none;
    }


    .k-radio-item,
    .k-radio-list-item {
        padding-inline: var( --kendo-radio-list-item-padding-x, #{k-if-var( $kendo-radio-list-item-padding-x, 0 )} );
        padding-block: var( --kendo-radio-list-item-padding-y, #{k-if-var( $kendo-radio-list-item-padding-y, 0 )} );
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        align-content: center;
        gap: var( --kendo-radio-list-item-spacing, #{k-if-var( $kendo-radio-list-item-spacing, 0 )} );

        .k-radio-label {
            margin: 0;
        }
    }
    .k-radio-list-horizontal,
    .k-radio-list.k-list-horizontal {
        display: flex;
        flex-flow: row wrap;
        gap: var( --kendo-radio-list-spacing, #{k-if-var( $kendo-radio-list-spacing, 0 )});
    }


    // Ripple
    .k-ripple-container {
        .k-radio::after {
            content: "";
            width: var( --kendo-radio-ripple-width, 300% );
            height: var( --kendo-radio-ripple-height, 300% );
            display: block;
            position: absolute;
            left: 50%;
            top: 50%;
            border-radius: 100%;
            z-index: -1;
            transition: opacity 100ms linear, transform 150ms cubic-bezier(.4, 0, .2, 1);
            transform: translate(-50%, -50%) scale(0);
            transform-origin: center center;
        }

        .k-radio:focus,
        .k-radio.k-focus {
            box-shadow: none !important; // stylelint-disable-line declaration-no-important
            outline: none !important; // stylelint-disable-line declaration-no-important
        }

        .k-radio:disabled::after,
        .k-radio.k-disabled::after {
            display: none;
        }
    }


    // Radio size
    @each $size, $size-props in $kendo-radio-sizes {
        $_size: k-map-get( $size-props, size );
        $_glyph-size: k-map-get( $size-props, glyph-size );
        $_indicator-size: k-map-get( $size-props, indicator-size );
        $_indeterminate-size: k-map-get( $size-props, indeterminate-size );
        $_ripple-size: k-map-get( $size-props, ripple-size );

        .k-radio-#{$size} {
            --kendo-radio-width: var( --kendo-radio-#{$size}-width, #{$_size} );
            --kendo-radio-height: var( --kendo-radio-#{$size}-height, #{$_size} );
            --kendo-radio-glyph-size: var( --kendo-radio-#{$size}-glyph-size, #{$_glyph-size} );
            --kendo-radio-indicator-size: var( --kendo-radio-#{$size}-indicator-size, #{$_indicator-size} );
            --kendo-radio-indeterminate-size: var( --kendo-radio-#{$size}-indeterminate-size, #{$_indeterminate-size} );
            --kendo-radio-ripple-width: var( --kendo-radio-#{$size}-ripple-size-width, #{$_ripple-size} );
            --kendo-radio-ripple-height: var( --kendo-radio-#{$size}-ripple-size-height, #{$_ripple-size} );
        }
    }

}
