@mixin kendo-input--theme() {

    // Input
    .k-input {
        background-color: var( --kendo-input-bg );
        color: var( --kendo-input-text );
        border-color: var( --kendo-input-border );
        box-shadow: var( --kendo-input-shadow );
        outline: var( --kendo-input-outline );

        // Input ripple
        &::after {
            border-color: inherit;
        }


        // Hover state
        @if k-list-includes( $kendo-input-ui-states, hover ) {
            &:hover,
            &.k-hover {
                background-color: var( --kendo-input-hover-bg );
                color: var( --kendo-input-hover-text );
                border-color: var( --kendo-input-hover-border );
                box-shadow: var( --kendo-input-hover-shadow );
                outline: var( --kendo-input-hover-outline );
            }
        }


        // Focus state
        @if k-list-includes( $kendo-input-ui-states, focus ) {
            &:focus,
            &.k-focus,
            &:focus-within {
                background-color: var( --kendo-input-focus-bg );
                color: var( --kendo-input-focus-text );
                border-color: var( --kendo-input-focus-border );
                box-shadow: var( --kendo-input-focus-shadow );
                outline: var( --kendo-input-focus-outline );
            }
        }


        // Focus hover state
        @if k-list-includes( $kendo-input-ui-states, focus-hover ) {
            &:focus:hover,
            &.k-focus.k-hover {
                background-color: var( --kendo-input-focus-hover-bg );
                color: var( --kendo-input-focus-hover-text );
                border-color: var( --kendo-input-focus-hover-border );
                box-shadow: var( --kendo-input-focus-hover-shadow );
                outline: var( --kendo-input-focus-hover-outline );
            }
        }


        // Disabled state
        @if k-list-includes( $kendo-input-ui-states, disabled ) {
            &:disabled,
            &[disabled],
            &.k-disabled {
                background-color: var( --kendo-input-disabled-bg );
                color: var( --kendo-input-disabled-text );
                border-color: var( --kendo-input-disabled-border );
                box-shadow: var( --kendo-input-disabled-shadow );
                outline: var( --kendo-input-disabled-outline );
            }
        }


        // Invalid state
        @if k-list-includes( $kendo-input-ui-states, invalid ) {
            &:invalid,
            &.k-invalid,
            &.ng-invalid.ng-touched,
            &.ng-invalid.ng-dirty {
                --kendo-input-validation-icon-text: #{k-var( --kendo-input-invalid-icon-text, $kendo-input-invalid-icon-text )};

                &,
                &:focus:hover,
                &.k-focus.k-hover {
                    background-color: var( --kendo-input-invalid-bg );
                    color: var( --kendo-input-invalid-text );
                    border-color: var( --kendo-input-invalid-border );
                }
            }
        }


        // Valid state
        @if k-list-includes( $kendo-input-ui-states, valid ) {
            &.k-valid {
                --kendo-input-validation-icon-text: #{k-var( --kendo-input-valid-icon-text, $kendo-input-valid-icon-text )};
            }
        }
    }


    // Picker
    .k-picker {
        color: var( --kendo-picker-text );
        background-color: var( --kendo-picker-bg );
        border-color: var( --kendo-picker-border );
        box-shadow: var( --kendo-picker-shadow );
        outline: var( --kendo-picker-outline );

        // Input ripple
        &::after {
            border-color: inherit;
        }


        // Hover state
        @if k-list-includes( $kendo-picker-ui-states, hover ) {
            &:hover,
            &.k-hover {
                background-color: var( --kendo-picker-hover-bg );
                color: var( --kendo-picker-hover-text );
                border-color: var( --kendo-picker-hover-border );
                box-shadow: var( --kendo-picker-hover-shadow );
                outline: var( --kendo-picker-hover-outline );
            }
        }


        // Focus state
        @if k-list-includes( $kendo-picker-ui-states, focus ) {
            &:focus,
            &.k-focus,
            &:focus-within {
                background-color: var( --kendo-picker-focus-bg );
                color: var( --kendo-picker-focus-text );
                border-color: var( --kendo-picker-focus-border );
                box-shadow: var( --kendo-picker-focus-shadow );
                outline: var( --kendo-picker-focus-outline );
            }
        }


        // Focus hover state
        @if k-list-includes( $kendo-picker-ui-states, focus-hover ) {
            &:focus:hover,
            &.k-focus.k-hover {
                background-color: var( --kendo-picker-focus-hover-bg );
                color: var( --kendo-picker-focus-hover-text );
                border-color: var( --kendo-picker-focus-hover-border );
                box-shadow: var( --kendo-picker-focus-hover-shadow );
                outline: var( --kendo-picker-focus-hover-outline );
            }
        }


        // Disabled state
        @if k-list-includes( $kendo-picker-ui-states, disabled ) {
            &:disabled,
            &[disabled],
            &.k-disabled {
                background-color: var( --kendo-picker-disabled-bg );
                color: var( --kendo-picker-disabled-text );
                border-color: var( --kendo-picker-disabled-border );
                box-shadow: var( --kendo-picker-disabled-shadow );
                outline: var( --kendo-picker-disabled-outline );
            }
        }


        // Invalid state
        @if k-list-includes( $kendo-picker-ui-states, invalid ) {
            &:invalid,
            &.k-invalid,
            &.ng-invalid.ng-touched,
            &.ng-invalid.ng-dirty {
                --kendo-input-validation-icon-text: #{k-var( --kendo-picker-invalid-icon-text, $kendo-picker-invalid-icon-text )};

                &,
                &:focus:hover,
                &.k-focus.k-hover {
                    background-color: var( --kendo-picker-invalid-bg );
                    color: var( --kendo-picker-invalid-text );
                    border-color: var( --kendo-picker-invalid-border );
                }
            }
        }


        // Valid state
        @if k-list-includes( $kendo-picker-ui-states, valid ) {
            &.k-valid {
                --kendo-input-validation-icon-text: #{k-var( --kendo-picker-valid-icon-text, $kendo-input-valid-icon-text )};
            }
        }
    }




    @each $variant, $theme-props in $kendo-input-theme {
        $suffix: if( $variant == DEFAULT, "", "-#{$variant}" );

        $_bg: k-map-get( $theme-props, bg );
        $_text: k-map-get( $theme-props, text );
        $_border: k-map-get( $theme-props, border );
        $_shadow: k-map-get( $theme-props, shadow );
        $_outline: k-map-get( $theme-props, outline );

        $_hover-bg: k-map-get( $theme-props, hover-bg );
        $_hover-text: k-map-get( $theme-props, hover-text );
        $_hover-border: k-map-get( $theme-props, hover-border );
        $_hover-shadow: k-map-get( $theme-props, hover-shadow );
        $_hover-outline: k-map-get( $theme-props, hover-outline );

        $_focus-bg: k-map-get( $theme-props, focus-bg );
        $_focus-text: k-map-get( $theme-props, focus-text );
        $_focus-border: k-map-get( $theme-props, focus-border );
        $_focus-shadow: k-map-get( $theme-props, focus-shadow );
        $_focus-outline: k-map-get( $theme-props, focus-outline );

        $_focus-hover-bg: k-map-get( $theme-props, focus-hover-bg );
        $_focus-hover-text: k-map-get( $theme-props, focus-hover-text );
        $_focus-hover-border: k-map-get( $theme-props, focus-hover-border );
        $_focus-hover-shadow: k-map-get( $theme-props, focus-hover-shadow );
        $_focus-hover-outline: k-map-get( $theme-props, focus-hover-outline );

        $_invalid-bg: k-map-get( $theme-props, invalid-bg );
        $_invalid-text: k-map-get( $theme-props, invalid-text );
        $_invalid-border: k-map-get( $theme-props, invalid-border );
        $_invalid-shadow: k-map-get( $theme-props, invalid-shadow );
        $_invalid-outline: k-map-get( $theme-props, invalid-outline );

        $_disabled-bg: k-map-get( $theme-props, disabled-bg );
        $_disabled-text: k-map-get( $theme-props, disabled-text );
        $_disabled-border: k-map-get( $theme-props, disabled-border );
        $_disabled-shadow: k-map-get( $theme-props, disabled-shadow );
        $_disabled-outline: k-map-get( $theme-props, disabled-outline );

        .k-input#{$suffix} {
            --kendo-input-bg: #{k-var( --kendo-input-#{$variant}-bg, $_bg )};
            --kendo-input-text: #{k-var( --kendo-input-#{$variant}-text, $_text )};
            --kendo-input-border: #{k-var( --kendo-input-#{$variant}-border, $_border )};
            --kendo-input-shadow: #{k-var( --kendo-input-#{$variant}-shadow, $_shadow )};
            --kendo-input-outline: #{k-var( --kendo-input-#{$variant}-outline, $_outline )};

            @if k-list-includes( $kendo-input-ui-states, hover ) {
                --kendo-input-hover-bg: #{k-var( --kendo-input-#{$variant}-hover-bg, $_hover-bg )};
                --kendo-input-hover-text: #{k-var( --kendo-input-#{$variant}-hover-text, $_hover-text )};
                --kendo-input-hover-border: #{k-var( --kendo-input-#{$variant}-hover-border, $_hover-border )};
                --kendo-input-hover-shadow: #{k-var( --kendo-input-#{$variant}-hover-shadow, $_hover-shadow )};
                --kendo-input-hover-outline: #{k-var( --kendo-input-#{$variant}-hover-outline, $_hover-outline )};
            }

            @if k-list-includes( $kendo-input-ui-states, focus ) {
                --kendo-input-focus-bg: #{k-var( --kendo-input-#{$variant}-focus-bg, $_focus-bg )};
                --kendo-input-focus-text: #{k-var( --kendo-input-#{$variant}-focus-text, $_focus-text )};
                --kendo-input-focus-border: #{k-var( --kendo-input-#{$variant}-focus-border, $_focus-border )};
                --kendo-input-focus-shadow: #{k-var( --kendo-input-#{$variant}-focus-shadow, $_focus-shadow )};
                --kendo-input-focus-outline: #{k-var( --kendo-input-#{$variant}-focus-outline, $_focus-outline )};
            }

            @if k-list-includes( $kendo-input-ui-states, focus-hover ) {
                --kendo-input-focus-hover-bg: #{k-var( --kendo-input-#{$variant}-focus-hover-bg, $_focus-hover-bg )};
                --kendo-input-focus-hover-text: #{k-var( --kendo-input-#{$variant}-focus-hover-text, $_focus-hover-text )};
                --kendo-input-focus-hover-border: #{k-var( --kendo-input-#{$variant}-focus-hover-border, $_focus-hover-border )};
                --kendo-input-focus-hover-shadow: #{k-var( --kendo-input-#{$variant}-focus-hover-shadow, $_focus-hover-shadow )};
                --kendo-input-focus-hover-outline: #{k-var( --kendo-input-#{$variant}-focus-hover-outline, $_focus-hover-outline )};
            }

            @if k-list-includes( $kendo-input-ui-states, invalid ) {
                --kendo-input-invalid-bg: #{k-var( --kendo-input-#{$variant}-invalid-bg, $_invalid-bg )};
                --kendo-input-invalid-text: #{k-var( --kendo-input-#{$variant}-invalid-text, $_invalid-text )};
                --kendo-input-invalid-border: #{k-var( --kendo-input-#{$variant}-invalid-border, $_invalid-border )};
                --kendo-input-invalid-shadow: #{k-var( --kendo-input-#{$variant}-invalid-shadow, $_invalid-shadow )};
                --kendo-input-invalid-outline: #{k-var( --kendo-input-#{$variant}-invalid-outline, $_invalid-outline )};
            }

            @if k-list-includes( $kendo-input-ui-states, disabled ) {
                --kendo-input-disabled-bg: #{k-var( --kendo-input-#{$variant}-disabled-bg, $_disabled-bg )};
                --kendo-input-disabled-text: #{k-var( --kendo-input-#{$variant}-disabled-text, $_disabled-text )};
                --kendo-input-disabled-border: #{k-var( --kendo-input-#{$variant}-disabled-border, $_disabled-border )};
                --kendo-input-disabled-shadow: #{k-var( --kendo-input-#{$variant}-disabled-shadow, $_disabled-shadow )};
                --kendo-input-disabled-outline: #{k-var( --kendo-input-#{$variant}-disabled-outline, $_disabled-outline )};
            }
        }
    }




    @each $variant, $theme-props in $kendo-picker-theme {
        $suffix: if( $variant == DEFAULT, "", "-#{$variant}" );

        $_bg: k-map-get( $theme-props, bg );
        $_text: k-map-get( $theme-props, text );
        $_border: k-map-get( $theme-props, border );
        $_shadow: k-map-get( $theme-props, shadow );
        $_outline: k-map-get( $theme-props, outline );

        $_hover-bg: k-map-get( $theme-props, hover-bg );
        $_hover-text: k-map-get( $theme-props, hover-text );
        $_hover-border: k-map-get( $theme-props, hover-border );
        $_hover-shadow: k-map-get( $theme-props, hover-shadow );
        $_hover-outline: k-map-get( $theme-props, hover-outline );

        $_focus-bg: k-map-get( $theme-props, focus-bg );
        $_focus-text: k-map-get( $theme-props, focus-text );
        $_focus-border: k-map-get( $theme-props, focus-border );
        $_focus-shadow: k-map-get( $theme-props, focus-shadow );
        $_focus-outline: k-map-get( $theme-props, focus-outline );

        $_focus-hover-bg: k-map-get( $theme-props, focus-hover-bg );
        $_focus-hover-text: k-map-get( $theme-props, focus-hover-text );
        $_focus-hover-border: k-map-get( $theme-props, focus-hover-border );
        $_focus-hover-shadow: k-map-get( $theme-props, focus-hover-shadow );
        $_focus-hover-outline: k-map-get( $theme-props, focus-hover-outline );

        $_invalid-bg: k-map-get( $theme-props, invalid-bg );
        $_invalid-text: k-map-get( $theme-props, invalid-text );
        $_invalid-border: k-map-get( $theme-props, invalid-border );
        $_invalid-shadow: k-map-get( $theme-props, invalid-shadow );
        $_invalid-outline: k-map-get( $theme-props, invalid-outline );

        $_disabled-bg: k-map-get( $theme-props, disabled-bg );
        $_disabled-text: k-map-get( $theme-props, disabled-text );
        $_disabled-border: k-map-get( $theme-props, disabled-border );
        $_disabled-shadow: k-map-get( $theme-props, disabled-shadow );
        $_disabled-outline: k-map-get( $theme-props, disabled-outline );

        .k-picker#{$suffix} {
            --kendo-picker-bg: #{k-var( --kendo-picker-#{$variant}-bg, $_bg )};
            --kendo-picker-text: #{k-var( --kendo-picker-#{$variant}-text, $_text )};
            --kendo-picker-border: #{k-var( --kendo-picker-#{$variant}-border, $_border )};
            --kendo-picker-shadow: #{k-var( --kendo-picker-#{$variant}-shadow, $_shadow )};
            --kendo-picker-outline: #{k-var( --kendo-picker-#{$variant}-outline, $_outline )};

            @if k-list-includes( $kendo-picker-ui-states, hover ) {
                --kendo-picker-hover-bg: #{k-var( --kendo-picker-#{$variant}-hover-bg, $_hover-bg )};
                --kendo-picker-hover-text: #{k-var( --kendo-picker-#{$variant}-hover-text, $_hover-text )};
                --kendo-picker-hover-border: #{k-var( --kendo-picker-#{$variant}-hover-border, $_hover-border )};
                --kendo-picker-hover-shadow: #{k-var( --kendo-picker-#{$variant}-hover-shadow, $_hover-shadow )};
                --kendo-picker-hover-outline: #{k-var( --kendo-picker-#{$variant}-hover-outline, $_hover-outline )};
            }

            @if k-list-includes( $kendo-picker-ui-states, focus ) {
                --kendo-picker-focus-bg: #{k-var( --kendo-picker-#{$variant}-focus-bg, $_focus-bg )};
                --kendo-picker-focus-text: #{k-var( --kendo-picker-#{$variant}-focus-text, $_focus-text )};
                --kendo-picker-focus-border: #{k-var( --kendo-picker-#{$variant}-focus-border, $_focus-border )};
                --kendo-picker-focus-shadow: #{k-var( --kendo-picker-#{$variant}-focus-shadow, $_focus-shadow )};
                --kendo-picker-focus-outline: #{k-var( --kendo-picker-#{$variant}-focus-outline, $_focus-outline )};
            }

            @if k-list-includes( $kendo-picker-ui-states, focus-hover ) {
                --kendo-picker-focus-hover-bg: #{k-var( --kendo-picker-#{$variant}-focus-hover-bg, $_focus-hover-bg )};
                --kendo-picker-focus-hover-text: #{k-var( --kendo-picker-#{$variant}-focus-hover-text, $_focus-hover-text )};
                --kendo-picker-focus-hover-border: #{k-var( --kendo-picker-#{$variant}-focus-hover-border, $_focus-hover-border )};
                --kendo-picker-focus-hover-shadow: #{k-var( --kendo-picker-#{$variant}-focus-hover-shadow, $_focus-hover-shadow )};
                --kendo-picker-focus-hover-outline: #{k-var( --kendo-picker-#{$variant}-focus-hover-outline, $_focus-hover-outline )};
            }

            @if k-list-includes( $kendo-picker-ui-states, invalid ) {
                --kendo-picker-invalid-bg: #{k-var( --kendo-picker-#{$variant}-invalid-bg, $_invalid-bg )};
                --kendo-picker-invalid-text: #{k-var( --kendo-picker-#{$variant}-invalid-text, $_invalid-text )};
                --kendo-picker-invalid-border: #{k-var( --kendo-picker-#{$variant}-invalid-border, $_invalid-border )};
                --kendo-picker-invalid-shadow: #{k-var( --kendo-picker-#{$variant}-invalid-shadow, $_invalid-shadow )};
                --kendo-picker-invalid-outline: #{k-var( --kendo-picker-#{$variant}-invalid-outline, $_invalid-outline )};
            }

            @if k-list-includes( $kendo-picker-ui-states, disabled ) {
                --kendo-picker-disabled-bg: #{k-var( --kendo-picker-#{$variant}-disabled-bg, $_disabled-bg )};
                --kendo-picker-disabled-text: #{k-var( --kendo-picker-#{$variant}-disabled-text, $_disabled-text )};
                --kendo-picker-disabled-border: #{k-var( --kendo-picker-#{$variant}-disabled-border, $_disabled-border )};
                --kendo-picker-disabled-shadow: #{k-var( --kendo-picker-#{$variant}-disabled-shadow, $_disabled-shadow )};
                --kendo-picker-disabled-outline: #{k-var( --kendo-picker-#{$variant}-disabled-outline, $_disabled-outline )};
            }
        }
    }
}


@mixin kendo-input--extended-theme() {}
