@mixin kendo-input--layout() {

    // Generic input
    .k-input,
    .k-picker {
        margin: 0;
        padding: 0;
        width: var( --kendo-input-width, #{k-if-var( $kendo-input-width, 100% )} );
        min-width: 0;
        border-width: var( --kendo-input-border-width, 1px );
        border-style: solid;
        outline: 0;
        box-sizing: border-box;
        font-family: k-var( --kendo-input-font-family, #{k-if-var( $kendo-input-font-family, inherit )} );
        font-size: k-var( --kendo-input-font-size, inherit );
        line-height: k-var( --kendo-input-line-height, normal );
        font-weight: k-var( --kendo-input-font-weight, #{k-if-var( $kendo-input-font-weight, normal )} );
        text-align: start;
        box-shadow: none;
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: stretch;
        vertical-align: middle;
        position: relative;
        overflow: hidden;
        text-overflow: ellipsis;

        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        &::placeholder {
            @extend .k-input-placeholder !optional;
        }

        // Nested
        .k-input,
        .k-picker {
            display: contents;
        }

        // fix for Safari
        & > * {
            margin: 0;
        }
    }

    // Input and Textarea
    .k-input {}
    input.k-input,
    textarea.k-textarea {
        padding-inline: var( --kendo-input-padding-x, 0 );
        padding-block: var( --kendo-input-padding-y, 0 );
    }
    textarea.k-textarea {
        overflow: auto;
    }


    // Picker
    .k-picker {
        cursor: pointer;
    }
    select.k-picker {
        padding-inline: var( --kendo-input-padding-x, 0 );
        padding-block: var( --kendo-input-padding-y,  0 );
        appearance: auto;
        -webkit-appearance: none;
    }


    // Input inner
    .k-input-inner {
        padding-inline: var( --kendo-input-padding-x, 0 );
        padding-block: var( --kendo-input-padding-y, 0 );
        width: 100%;
        border: 0;
        outline: 0;
        color: inherit;
        background: none;
        font: inherit;
        flex: 1;
        position: relative;
        z-index: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-appearance: none;

        // Placeholder text
        &::placeholder {
            @extend .k-input-placeholder !optional;
        }

        // Invalid
        &:invalid {
            box-shadow: none;
        }
    }
    span.k-input-inner {
        white-space: nowrap;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
    }
    textarea.k-input-inner {
        margin: 0;
    }


    // Placeholder text
    .k-input-placeholder {
        color: var( --kendo-input-placeholder-text, inherit );
        opacity: var( --kendo-input-placeholder-opacity, 1 );
        user-select: none;
    }


    // Input value
    .k-input-value-icon {
        flex: none;
    }
    .k-input-value-text {
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .k-input-value-text::before {
        content: "\200b";
        width: 0px;
        overflow: hidden;
        flex: none;
        display: inline-block;
        vertical-align: top;
    }


    // Input multiple values
    .k-input-values {
        width: 100%;
        padding-inline: var( --kendo-input-values-padding-x, 0 );
        padding-block: var( --kendo-input-values-padding-y, 0 );
        display: flex;
        flex-flow: row wrap;
        gap: var( --kendo-input-values-spacing, 0 );
        cursor: text;
    }
    .k-input-values > .k-chip-list {
        display: contents;
    }


    // Input prefix and suffix
    .k-input-prefix,
    .k-input-suffix {
        border-color: inherit;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        flex: none;

        > * {
            flex-shrink: 0;
        }
    }


    // Input separator
    .k-input-separator {
        margin: 0;
        width: 0;
        height: var( --kendo-input-icon-size, 1em );
        border-width: 0 0 0 1px;
        border-style: solid;
        border-color: inherit;
        align-self: center;
    }


    // Input with icon styles
    .k-input-icon,
    .k-input-validation-icon,
    .k-input-loading-icon,
    .k-input-prefix > .k-icon,
    .k-input-suffix > .k-icon {
        width: var( --kendo-input-icon-size, min-content );
        height: var( --kendo-input-icon-size, min-content );
        flex: none;
        align-self: center;
        display: inline-flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;
    }
    .k-input-validation-icon {
        color: var( --kendo-input-validation-icon-text, inherit );
    }


    // Clear value
    .k-clear-value {
        width: var( --kendo-input-icon-size, min-content );
        height: var( --kendo-input-icon-size, min-content );
        outline: 0;
        color: k-var( --kendo-input-clear-value-text, #{k-if-var( $kendo-input-clear-value-text, inherit )} );
        flex: none;
        align-self: center;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: k-var( --kendo-input-clear-value-opacity, #{k-if-var( $kendo-input-clear-value-opacity, 1 )} );
    }
    .k-clear-value:hover,
    .k-clear-value.k-hover {
        color: k-var( --kendo-input-clear-value-hover-text, #{k-if-var( $kendo-input-clear-value-hover-text, inherit )} );
        opacity: k-var( --kendo-input-clear-value-hover-opacity, #{k-if-var( $kendo-input-clear-value-hover-opacity, 1 )} );
    }
    .k-clear-value:focus-visible {
        outline: 1px dotted;
        outline-offset: -1px;
    }


    // Input button
    .k-input-button {
        width: if( $kendo-use-input-button-width, var( --kendo-input-button-width, auto ), null );
        padding-inline:  var( --kendo-input-button-padding-x, 0 );
        padding-block: var( --kendo-input-button-padding-y, 0 );
        border-width: 0;
        border-radius: 0;
        border-color: inherit;
        flex: none;
        aspect-ratio: auto;
        box-shadow: none;

        > .k-button-icon {
            min-width: auto !important; // sass-lint:disable-line no-important
            // min-height: auto !important; // sass-lint:disable-line no-important
        }

        &:focus::after {
            outline: none;
        }
    }
    .k-input-solid .k-input-button {
        border-inline-start-width: var( --kendo-input-button-border-width, 1px );
    }
    .k-input-outline .k-input-button {
        border-inline-start-width: var( --kendo-input-button-border-width, 1px );
    }
    .k-picker .k-input-button {
        color: inherit !important; // sass-lint:disable-line no-important
        background: none !important; // sass-lint:disable-line no-important
        border-width: 0 !important; // sass-lint:disable-line no-important
        box-shadow: none !important; // sass-lint:disable-line no-important
        outline: 0 !important; // sass-lint:disable-line no-important
    }


    // Input spinner
    .k-input-spinner {
        width: if( $kendo-use-input-spinner-width, var( --kendo-input-spinner-width, auto ), null );
        flex: none;
        display: flex;
        flex-flow: column nowrap;

        .k-spinner-increase,
        .k-spinner-decrease {
            padding-inline: var( --kendo-input-button-padding-x, 0 );
            padding-block: var( --kendo-input-button-padding-y, 0 );
            border-width: 0;
            border-inline-start-width: var( --kendo-input-button-border-width, 1px );
            border-radius: 0;
            border-color: var( --kendo-input-border, inherit );
            flex: 1 1 50%;
            box-shadow: none;
            position: relative;
            aspect-ratio: auto;

            > .k-button-icon {
                margin: -1em 0;
                min-width: auto !important; // sass-lint:disable-line no-important
                min-height: auto !important; // sass-lint:disable-line no-important
            }
        }
        .k-spinner-increase .k-icon {
            bottom: if( $kendo-use-input-spinner-icon-offset, calc( -1 * var( --kendo-input-spinner-icon-offset, 0 ) ), null );
        }
        .k-spinner-decrease .k-icon {
            top: if( $kendo-use-input-spinner-icon-offset, calc( -1 * var( --kendo-input-spinner-icon-offset, 0 ) ), null );
        }
    }


    // Icon picker
    .k-icon-picker {
        .k-input-inner {
            padding: 0;
            // padding-inline: var( --kendo-input-padding-y, 0 );
            // padding-block: var( --kendo-input-padding-y, 0 );
            width: var( --kendo-input-inner-width, auto );
            // box-sizing: content-box;
            justify-content: center;
        }

        .k-value-icon {
            border: 0;
            border-radius: 0;
        }
    }


    // Input group
    .k-input-group {
        display: flex;
        flex-flow: row nowrap;
        align-items: stretch;

        > * {
            flex-shrink: 0;
        }

        // Border radius
        > :first-child:not(:only-child) {
            border-start-end-radius: 0;
            border-end-end-radius: 0;
        }
        > :last-child:not(:only-child) {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
        }
        > :not(:first-child):not(:last-child) {
            border-radius: 0;
        }
    }


    // Fill mode
    .k-input-flat,
    .k-picker-flat {
        @include border-bottom-radius( 0 !important ); // sass-lint:disable-line no-important
        border-inline-width: 0 !important; // sass-lint:disable-line no-important
        border-top-color: transparent !important; // sass-lint:disable-line no-important

        &:focus,
        &.k-focus,
        &:focus-within {

            &::after {
                border-width: 0 0 var( --kendo-input-focus-border-width, 2px ) 0;
            }

        }
    }

    .k-input-flat,
    .k-input-outline {
        background: none !important; // sass-lint:disable-line no-important
    }


    // Sizing
    @each $size, $size-props in $kendo-input-sizes {
        $_padding-x: k-map-get( $size-props, padding-x );
        $_padding-y: k-map-get( $size-props, padding-y );
        $_font-size: k-map-get( $size-props, font-size );
        $_line-height: k-map-get( $size-props, line-height );
        $_icon-size: k-map-get( $size-props, icon-size );
        $_button-padding-x: k-map-get( $size-props, button-padding-x );
        $_button-padding-y: k-map-get( $size-props, button-padding-y );
        $_button-width: k-map-get( $size-props, button-width );
        $_spinner-width: k-map-get( $size-props, spinner-width );
        $_spinner-icon-offset: k-map-get( $size-props, spinner-icon-offset );

        .k-input-#{$size},
        .k-picker-#{$size} {
            --kendo-input-padding-x: #{k-var( --kendo-input-#{$size}-padding-x, $_padding-x )};
            --kendo-input-padding-y: #{k-var( --kendo-input-#{$size}-padding-y, $_padding-y )};
            --kendo-input-font-size: #{k-var( --kendo-input-#{$size}-font-size, $_font-size )};
            --kendo-input-line-height: #{k-var( --kendo-input-#{$size}-line-height, $_line-height )};
            --kendo-input-inner-width: #{k-var( --kendo-input-#{$size}-inner-width, $_button-width )};
            --kendo-input-icon-size: #{k-var( --kendo-input-#{$size}-icons-size, $_icon-size )};
            --kendo-input-button-padding-x: #{k-var( --kendo-input-#{$size}-button-padding-x, $_button-padding-x )};
            --kendo-input-button-padding-y: #{k-var( --kendo-input-#{$size}-button-padding-y, $_button-padding-y )};
            --kendo-input-button-width: #{k-var( --kendo-input-#{$size}-button-width, $_button-width )};
            --kendo-input-spinner-width: #{k-var( --kendo-input-#{$size}-spinner-width, $_spinner-width )};
            --kendo-input-spinner-icon-offset: #{k-var( --kendo-input-#{$size}-spinner-icon-offset, $_spinner-icon-offset )};
        }
    }


    // Autofill fix
    // This is needed for the textbox container to capture browser autofill
    @keyframes autoFillStart {
        from {}
        to {}
    }
    @keyframes autoFillEnd {
        from {}
        to {}
    }

    .k-autofill:-webkit-autofill {
        animation-name: autoFillStart;
    }
    .k-autofill:not(:-webkit-autofill) {
        animation-name: autoFillEnd;
    }


    .k-input:-webkit-autofill {
        animation-name: autoFillStart;
    }
    .k-input:not(:-webkit-autofill) {
        animation-name: autoFillEnd;
    }


    // Legacy wrappers
    .k-searchbar {
        display: contents;
    }

}




@mixin kendo-input--extended-layout() {}
