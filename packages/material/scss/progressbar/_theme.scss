@mixin progressbar-indeterminate-animation($direction) {
    $primary-animation-name: progressbar-primary-indeterminate-#{$direction};
    $secondary-animation-name: progressbar-secondary-indeterminate-#{$direction};

    @function _translate($value) {
        @return if($direction == horizontal, translateX($value), translateY($value));
    }
    @function _scale($value) {
        @return if($direction == horizontal, scaleX($value), scaleY($value));
    }

    @keyframes #{$primary-animation-name} {
        0% {
            transform: _translate(0) _scale(0);
        }
        20% {
            transform: _translate(0) _scale(.08);
            animation-timing-function: cubic-bezier(.4, .08, .75, .8);
        }
        60% {
            transform: _translate(83%) _scale(.75);
            animation-timing-function: cubic-bezier(.21, .25, .58, .98);
        }
        100% {
            transform: _translate(250%) _scale(.08);
        }
    }

    @keyframes #{$secondary-animation-name} {
        0% {
            transform: _translate(0) _scale(.08);
            animation-timing-function: cubic-bezier(.18, 0, .54, .42);
        }
        22% {
            transform: _translate(34%) _scale(.45);
            animation-timing-function: cubic-bezier(.22, .25, .7, .9);
        }
        46% {
            transform: _translate(82%) _scale(.75);
            animation-timing-function: cubic-bezier(.33, .3, .4, 1.2);
        }
        100% {
            transform: _translate(160%) _scale(.08);
        }
    }
}

@include exports("progressbar/theme") {

    $progressbar-status-offset: ($progressbar-height * 2) !default;
    $progressbar-status-font-size: 11px !default;
    $progressbar-indeterminate-animation-timing: 2s infinite !default;

    @include progressbar-indeterminate-animation(horizontal);
    @include progressbar-indeterminate-animation(vertical);

    // Theme
    .k-progressbar {
        @include border-radius( 0 );
        @include fill( $progressbar-text, $progressbar-bg, $progressbar-border, $progressbar-gradient );
        overflow: visible;

        .k-progress-status-wrap {
            font-size: $progressbar-status-font-size;
        }

        .k-state-selected {
            @include fill( $progressbar-fill-text, $progressbar-fill-bg, $progressbar-fill-border, $progressbar-fill-gradient );
        }

        .k-item {
            border-color: $progressbar-chunk-border;
        }
    }

    .k-progressbar-horizontal {
        .k-progress-status-wrap {
            top: -$progressbar-status-offset;
        }
    }

    .k-progressbar-vertical {

        .k-progress-status-wrap {
            top: 0;
            left: -$progressbar-status-offset;
        }
        &.k-progressbar-reverse .k-progress-status-wrap {
            left: $progressbar-status-offset;
        }
    }

    .k-progressbar-indeterminate {
        overflow: hidden;

        &::before,
        &::after {
            content: "";
            display: block;
            width: 100%;
            height: 100%;
            background: $progressbar-fill-bg;
            position: absolute;
            transform-origin: 0 0;
        }

        &.k-progressbar-horizontal {
            &::before {
                top: 0;
                left: -150%;
                animation: progressbar-primary-indeterminate-horizontal $progressbar-indeterminate-animation-timing;
            }
            &::after {
                top: 0;
                left: -50%;
                animation: progressbar-secondary-indeterminate-horizontal $progressbar-indeterminate-animation-timing;
            }
        }

        &.k-progressbar-vertical {
            &::before {
                top: -150%;
                left: 0;
                animation: progressbar-primary-indeterminate-vertical $progressbar-indeterminate-animation-timing;
            }
            &::after {
                top: -50%;
                left: 0;
                animation: progressbar-secondary-indeterminate-vertical $progressbar-indeterminate-animation-timing;
            }
        }
    }

}
