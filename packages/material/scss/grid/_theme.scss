@import "~@progress/kendo-theme-default/scss/grid/_theme.scss";

@include exports ("grid/theme/material") {
    $grid-filter-button-focus: rgba(0, 0, 0, .12) !default;
    $grid-edit-cell-border: rgba(0, 0, 0, .12) !default;
    $grid-edit-cell-bg: #f5f5f5 !default;
    $grid-edit-cell-shadow: 0 0 5px 3px rgba(0, 0, 0, .12) !default;

    $text-field-bg: rgba(0, 0, 0, .07) !default;

    .k-grid {

        .k-edit-cell {
            border-bottom: $grid-edit-cell-border;
            background-color: $grid-edit-cell-bg;
            box-shadow: $grid-edit-cell-shadow;
        }

        // Selected state
        td.k-state-selected,
        tr.k-state-selected {
            background-color: $grid-selected-bg;
        }
        tr.k-state-selected > td {
            background-color: transparent;
        }

        // Hover, Focused state
        table {
            tr:hover,
            tr.k-state-hover,
            td.k-state-focused,
            th.k-state-focused,
            th:focus,
            .k-master-row > td:focus,
            .k-grouping-row > td:focus,
            .k-detail-row > td:focus,
            .k-group-footer > td:focus  {
                background-color: $grid-hovered-bg;
            }

            tr:hover,
            tr.k-state-hover {
                .k-grid-header-sticky,
                .k-grid-footer-sticky {
                    background-color: $grid-sticky-hovered-bg;
                }
            }

            td.k-state-focused,
            th.k-state-focused,
            th:focus,
            .k-master-row > td:focus,
            .k-grouping-row > td:focus,
            .k-detail-row > td:focus,
            .k-group-footer > td:focus  {
                &.k-grid-header-sticky,
                &.k-grid-content-sticky,
                &.k-grid-footer-sticky {
                    background-color: $grid-sticky-hovered-bg;
                }
            }

        }

        th,
        td {
            border-left-color: transparent;
        }

        &[dir="rtl"],
        .k-rtl & {

            th,
            td {
                border-right-color: transparent;
            }

            .k-grid-header {

                thead > tr:not(:only-child) > th {
                    border-right-color: $grid-border;
                }
            }

            // Locked columns
            .k-grid-header-locked,
            .k-grid-content-locked,
            .k-grid-header-locked thead > tr > th.k-header,
            .k-grid-content-locked td {
                border-left-color: $grid-sticky-header-border;
                border-right-color: $grid-sticky-header-border;
            }

            .k-group-footer td {
                border-top-width: 0;
            }

            .k-grid-header thead > tr:not(:only-child) > .k-grid-header-sticky,
            .k-grid-footer-sticky {
                border-right-color: $grid-sticky-header-border;
                border-left-color: $grid-sticky-header-border;
            }
        }

        .k-grid-header-locked,
        .k-grid-content-locked,
        .k-grid-header-locked .k-header,
        .k-grid-content-locked td {
            border-top-color: $grid-header-border;
            border-bottom-color: $grid-header-border;

            .k-group-footer {
                &:hover td,
                &.k-state-hover td {
                    @include fill( $bg: $grid-sticky-footer-hovered-bg );
                }
            }
        }

        .k-master-row {
            .k-grid-content-sticky {
                border-color: $grid-sticky-border;
                border-bottom-color: $grid-header-border;
            }
            .k-grid-row-sticky {
                border-top-color: $grid-sticky-border;
                border-bottom-color: $grid-sticky-border;
            }
        }
    }

    .k-grid-header {
        .k-sorted,
        .k-link:hover {
            color: $grid-text;

            > .k-icon {
                color: inherit;
            }
        }

        .k-grid-filter,
        .k-header-column-menu,
        .k-hierarchy-cell .k-icon {
            &:hover {
                color: $grid-text;
                background-color: transparent;
            }

            &:focus,
            &.k-state-focus,
            &.k-state-border-down {
                color: $grid-text;
                background-color: $grid-filter-button-focus;
                box-shadow: none;
            }

            &.k-state-active {
                color: $primary-contrast;
                background-color: $primary;
            }
        }

        thead > tr:not(:only-child) > th {
            border-left-color: $grid-border;

            &.k-grid-header-sticky {
                border-right-color: $grid-sticky-header-border;
                border-left-color: $grid-sticky-header-border;
            }
        }

    }

    thead.k-grid-header> tr:not(:only-child)>th {
        border-left-color: $grid-border;
    }

    .k-grouping-header .k-group-indicator {
        background-color: $grid-selected-bg;

        .k-link {
            color: $grid-text;

            .k-icon {
                color: $grid-header-text;
            }
        }
    }

    .k-group-footer {
        td,
        .k-grid-footer-sticky {
            background: $grid-sticky-footer-bg;
        }

        &:hover td,
        &.k-state-hover td {
            @include fill( $bg: $grid-sticky-footer-hovered-bg );
        }
    }

    .k-grouping-dropclue,
    .k-reorder-cue {
        border-color: $primary;

        &::before {
            border-color: transparent;
        }

        &::after {
            border-color: transparent;
            background-color: transparent;
        }
    }

    .k-resize-handle:hover .k-resize-handle-inner {
        background-color: $primary;
    }

    .k-column-resizer:hover {
        color: $primary;
    }

    .k-reorder-cue {
        background-color: $primary;
    }

    .k-grid-edit-row > td {

        > .k-textbox,
        > .k-textarea,
        > .k-widget {
            background-color: $text-field-bg;
        }
    }

    .k-columnmenu-item {
        &.k-state-selected {
            @include fill(
                $list-item-selected-text,
                $list-item-selected-bg
            );
        }
    }
    .k-columnmenu-item:focus,
    .k-columnmenu-item.k-state-focus {
        background: $list-item-hovered-bg;
    }

    .k-column-menu .k-menu:not(.k-context-menu) {

        .k-item {
            // Selected state
            &.k-state-selected {
                background: $list-item-hovered-bg;
            }
        }
    }
}
