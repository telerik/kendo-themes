@include exports( "fab/theme/material" ) {

    // Normal state
    @each $name, $color in $fab-theme-colors {
        .k-fab-#{$name} {
            @include box-shadow($fab-shadow);
            border-color: $color;
            color: contrast-wcag( $color );
            background-color: $color;
        }
    }

    // Hover state
    @each $name, $color in $fab-theme-colors {
        .k-state-hover.k-fab-#{$name},
        .k-state-hovered.k-fab-#{$name},
        .k-fab-#{$name}:hover {
            border-color: true-mix( #ffffff, $color, 8%);
            background-color: true-mix( #ffffff, $color, 8%);
        }
    }

    // Focus state
    @each $name, $color in $fab-theme-colors {
        .k-state-focus.k-fab-#{$name},
        .k-state-focused.k-fab-#{$name},
        .k-fab-#{$name}:focus {
            border-color: true-mix( #ffffff, $color, 12%);
            background-color: true-mix( #ffffff, $color, 12%);
        }
    }

    // Active state
    @each $name, $color in $fab-theme-colors {
        .k-state-active.k-fab-#{$name},
        .k-state-selected.k-fab-#{$name},
        .k-fab-#{$name}:active {
            border-color: true-mix( #ffffff, $color, 16%);
            background-color: true-mix( #ffffff, $color, 16%);
            box-shadow: $fab-active-shadow;
        }
    }

    // Disabled state
    @each $name, $color in $fab-theme-colors {
        .k-state-disabled.k-fab-#{$name},
        .k-fab-#{$name}:disabled {
            @include box-shadow($fab-disabled-shadow);
            border-color: try-tint( try-shade( $body-bg, 12% ), 5);
            background-color: try-tint( try-shade( $body-bg, 12% ), 5);
            color: tint( $disabled-text, 4);
            opacity: 1;
        }
    }

    // Items
    .k-fab-item-text {
        @include fill(
            $fab-item-text,
            $fab-item-bg,
            $fab-item-border
        );
        @include box-shadow($fab-item-shadow);
    }
    .k-fab-item-icon {
        @include fill(
            $fab-item-icon-text,
            $fab-item-icon-bg,
            $fab-item-icon-border
        );
        @include box-shadow($fab-item-shadow);
    }

    // Hover state
    .k-fab-item.k-state-hover .k-fab-item-icon,
    .k-fab-item.k-state-hovered .k-fab-item-icon,
    .k-fab-item:hover .k-fab-item-icon {
        border-color: true-mix( #000000, $fab-item-icon-border, 8%);
        background-color: true-mix( #000000, $fab-item-icon-bg, 8%);
        color: true-mix( #000000, $fab-item-icon-text, 8%);
    }

    // Focus state
    .k-fab-item:focus .k-fab-item-icon,
    .k-fab-item.k-state-focus .k-fab-item-icon,
    .k-fab-item.k-state-focused .k-fab-item-icon {
        border-color: true-mix( #000000, $fab-item-icon-border, 12%);
        background-color: true-mix( #000000, $fab-item-icon-bg, 12%);
        color: true-mix( #000000, $fab-item-icon-text, 12%);
    }

    // Active state
    .k-fab-item.k-state-active .k-fab-item-icon,
    .k-fab-item:active .k-fab-item-icon {
        @include box-shadow($fab-item-active-shadow);
        border-color: true-mix( #ffffff, $fab-item-icon-border, 12%);
        background-color: true-mix( #ffffff, $fab-item-icon-bg, 12%);
    }

    // Disabled state
    .k-fab-item.k-state-disabled,
    .k-fab-item:disabled {
        opacity: 1;

        .k-fab-item-text,
        .k-fab-item-icon {
            @include box-shadow($fab-item-disabled-shadow);
            background-color: try-tint( $fab-item-bg, 8 );
            color: try-tint( $fab-item-text, 8 );
        }
    }

    // Popup
    .k-animation-container > .k-fab-popup {
        @include box-shadow( none );
    }
}
