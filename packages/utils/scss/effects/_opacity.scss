/// This is equivalent to `opacity: 0;`.
/// @example opacity: 0;
/// @name .k-opacity-0
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.05;`.
/// @example opacity: 0.5;
/// @name .k-opacity-5
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.1;`.
/// @example opacity: 0.1;
/// @name .k-opacity-10
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.2;`.
/// @example opacity: 0.2;
/// @name .k-opacity-20
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.3;`.
/// @example opacity: 0.3;
/// @name .k-opacity-30
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.4;`.
/// @example opacity: 0.4;
/// @name .k-opacity-40
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.5;`.
/// @example opacity: 0.5;
/// @name .k-opacity-50
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.6;`.
/// @example opacity: 0.6;
/// @name .k-opacity-60
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.7;`.
/// @example opacity: 0.7;
/// @name .k-opacity-70
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.8;`.
/// @example opacity: 0.8;
/// @name .k-opacity-80
/// @group opacity
/// @contextType css

/// This is equivalent to `opacity: 0.9;`.
/// @example opacity: 0.9;
/// @name .k-opacity-90
/// @group opacity

/// This is equivalent to `opacity: 1;`.
/// @example opacity: 1;
/// @name .k-opacity-100
/// @group opacity
/// @contextType css


@use "sass:map";
@use "../_globals.scss" as *;

// Register
@use "@progress/kendo-theme-core/scss/mixins/import-once.scss" as *;

@mixin kendo-utils--effects--opacity() {
    @include import-once("utils-effects-opacity") {

        // opacity utility classes
        $kendo-utils-opacity: map.get( $kendo-utils, "opacity" ) !default;
        @include generate-utils( opacity, opacity, $kendo-utils-opacity );

    }
}
