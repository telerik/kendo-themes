/// This is equivalent to `transform: rotate( 0 );`.
/// @example transform: rotate( 0 );
/// @name .k-rotate-0
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 45deg );`.
/// @example transform: rotate( 45deg );
/// @name .k-rotate-45
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 90deg );`.
/// @example transform: rotate( 90deg );
/// @name .k-rotate-90
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 135deg );`.
/// @example transform: rotate( 135deg );
/// @name .k-rotate-135
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 180deg );`.
/// @example transform: rotate( 180deg );
/// @name .k-rotate-180
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 225deg );`.
/// @example transform: rotate( 225deg );
/// @name .k-rotate-225
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 270deg );`.
/// @example transform: rotate( 270deg );
/// @name .k-rotate-270
/// @group transform
/// @contextType css

/// This is equivalent to `transform: rotate( 315deg );`.
/// @example transform: rotate( 315deg );
/// @name .k-rotate-315
/// @group transform
/// @contextType css

// stylelint-disable scss/at-function-pattern
@function __rotate( $val ) {
    @return rotate( $val );
}
// stylelint-enable scss/at-function-pattern

@mixin kendo-utils--transform--rotate() {

    // Rotate utility classes
    $kendo-utils-rotate: k-map-get( $kendo-utils, "rotate" ) !default;
    @include generate-utils( rotate, transform, $kendo-utils-rotate, __rotate );

}
