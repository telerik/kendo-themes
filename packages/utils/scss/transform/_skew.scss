/// This is equivalent to `transform: skewX(0deg);`.
/// @example transform: skewX(0deg);
/// @name .k-skew-x-0
/// @group skew
/// @contextType css

/// This is equivalent to `transform: skewX(1deg);`.
/// @example transform: skewX(1deg);
/// @name .k-skew-x-1
/// @group skew
/// @contextType css

/// This is equivalent to `transform: skewY(0deg);`.
/// @example transform: skewY(0deg);
/// @name .k-skew-y-0
/// @group skew
/// @contextType css

/// This is equivalent to `transform: skewY(1deg);`.
/// @example transform: skewY(1deg);
/// @name .k-skew-y-1
/// @group skew
/// @contextType css

@use "sass:map";
@use "../_globals.scss" as *;

// Register
@use "@progress/kendo-theme-core/scss/mixins/import-once.scss" as *;

@mixin kendo-utils--transform--skew() {
    @include import-once("utils-transform-skew") {

        // Transform skew utility classes
        $kendo-utils-skew: map.get( $kendo-utils, "skew" ) !default;
        @include generate-utils( skew-x, transform, $kendo-utils-skew, k-skew-x );
        @include generate-utils( skew-y, transform, $kendo-utils-skew, k-skew-y );

    }
}
