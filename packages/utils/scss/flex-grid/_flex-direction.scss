/// This is equivalent to `flex-direction: row`. This establishes the main-axis to be horizontal, thus defining the direction flex items are placed in the flex container: left to right in `ltr`; right to left in `rtl`.
/// @name .k-flex-row
/// @group flex-direction
/// @contextType css

/// This is equivalent to `flex-direction: row-reverse`. This establishes the main-axis to be horizontal, thus defining the direction flex items are placed in the flex container: right to left in `ltr`; left to right in `rtl`.
/// @name .k-flex-row-reverse
/// @group flex-direction
/// @contextType css

/// This is equivalent to `flex-direction: column`. This establishes the main-axis to be vertical, thus defining the direction flex items are placed in the flex container: top to bottom.
/// @name .k-flex-col
/// @group flex-direction
/// @contextType css

/// This is equivalent to `flex-direction: column-reverse`. This establishes the main-axis to be vertical, thus defining the direction flex items are placed in the flex container: bottom to top.
/// @name .k-flex-col-reverse
/// @group flex-direction
/// @contextType css

@mixin kendo-utils--flex-grid--flex-direction() {

    // Flex direction utility classes
    $kendo-utils-flex-direction: k-map-get( $kendo-utils, "flex-direction" ) !default;
    @include generate-utils( flex, flex-direction, $kendo-utils-flex-direction );


    // Legacy aliases
    .#{$kendo-prefix}flex-column { @extend .#{$kendo-prefix}flex-col !optional; }
    .#{$kendo-prefix}flex-column-reverse { @extend .#{$kendo-prefix}flex-col-reverse !optional; }

}
