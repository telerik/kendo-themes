/// This is equivalent to `flex: 1 1 0%;`.
/// @example flex: 1 1 0%;
/// @name .k-flex-1
/// @group flex
/// @contextType css

/// This is equivalent to `flex: 1 1 auto;`.
/// @example flex: 1 1 auto;
/// @name .k-flex-auto
/// @group flex
/// @contextType css

/// This is the same as `flex: initial;` and the shorthand for the default value: `flex: 0 1 auto`. It sizes the item based on its `width`/`height` properties (or its content if not set). It makes the flex item inflexible when there is some free space left, but allows it to shrink to its minimum when there is not enough space. The alignment abilities or `auto` margins can be used to align flex items along the main axis.
/// @example flex: initial;
/// @name .k-flex-initial
/// @group flex
/// @contextType css

/// This is equivalent to `flex: 0 0 auto;`.
/// @example flex: 0 0 auto;
/// @name .k-flex-none
/// @group flex
/// @contextType css

@mixin kendo-utils--flex-grid--flex() {

    // Flex utility classes
    $kendo-utils-flex: k-map-get( $kendo-utils, "flex" ) !default;
    @include generate-utils( flex, flex, $kendo-utils-flex );

}
