/// . If there is no custom color, it will return shadow with the default value.
/// @param {List} $shadow - Depth of the shadow with default color value.
/// @param {Color} $color - Custom color value.
/// @return {List} - Shadow value with resolved color.
///
/// @example scss - Usage
///   @debug k-shadow-customize( $shadow: (0 2px 7px rgba(0, 0, 0, .75)), $color: rgba(0, 0, 0, .5) ); // => 0 2px 7px rgba(0, 0, 0, .75)
@function k-shadow-inset( $shadow ) {
    $_shadow-inset: ();
    $_is-shadow-single: k-list-separator($shadow) != comma;
    $_inset-suffix: inset;

    @if ( $_is-shadow-single ) {
        $_shadow-inset: k-list-append( $shadow, $_inset-suffix );
    } @else {
        @each $_shadow-layer in $shadow {
            $_shadow-layer: k-list-append( $_shadow-layer, $_inset-suffix );
            $_shadow-inset: k-list-append( $_shadow-inset, $_shadow-layer, $separator: comma );
        }
    }

    @return $_shadow-inset;
}

@function k-shadow-map-inset( $shadows ) {
    @each $key, $shadow in $shadows {
        $_shadow: k-shadow-inset( $shadow );
        $shadows: k-map-set( $shadows, $key, $_shadow );
    }

    @return $shadows;
}
