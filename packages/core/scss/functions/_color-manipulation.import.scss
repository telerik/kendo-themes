$kendo-light-color-level-step: 8% !default;
$kendo-dark-color-level-step: 16% !default;

/// Set a specific jump point for requesting color jumps
/// @group color-system
/// @access private
$kendo-color-level-step: 8% !default;

@function k-color-level( $color, $level: 0 ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );
    $_color-level-step: if( $_dark-theme, $kendo-dark-color-level-step, $kendo-light-color-level-step );

    @if ( $level == 0 ) or ( $level == 0% ) {
        @return $color;
    }

    $base: if( $level < 0, #ffffff, #000000 );
    $level: k-math-abs( $level );


    @if ( k-math-unit($level) == "%" ) {
        @return k-color-mix( $base, $color, $level );
    }

    @return k-color-mix( $base, $color, k-math-clamp( $level * $_color-level-step, 0%, 100% ) );
}

/// Makes a color lighter by mixing it with white
/// @param {Color} $color - The color to lighten
/// @param {Number} $level - The amount to lighten the color
/// @return {Color} - The lightened color
///
/// @group color-system
///
/// @example scss - Usage
///   @debug k-color-tint( #f00, 1 ); // => #ff1a1a
@function k-color-tint( $color, $level: 1 ) {
    @return k-color-level( $color, -$level );
}

/// Makes a color darker by mixing it with black
/// @param {Color} $color - The color to darken
/// @param {Number} $level - The amount to darken the color
/// @return {Color} - The darkened color
///
/// @group color-system
///
/// @example scss - Usage
///   @debug k-color-shade( #f00, 1 ); // => #e60000
@function k-color-shade( $color, $level: 1 ) {
    @return k-color-level( $color, $level );
}

/// Shades the color in light themes and tints it in dark themes
/// @param {Color} $color - The color to shade or tint
/// @param {Number} $level - The amount to shade or tint the color
/// @return {Color} - The shaded or tinted color
///
/// @group color-system
@function k-try-shade( $color, $level: 1 ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-tint( $color, $level );
    }

    @return k-color-shade( $color, $level );
}

/// Tints the color in light themes and shades it in dark themes
/// @param {Color} $color - The color to tint or shade
/// @param {Number} $level - The amount to tint or shade the color
/// @return {Color} - The tinted or shaded color
///
/// @group color-system
@function k-try-tint( $color, $level: 1 ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-shade( $color, $level );
    }

    @return k-color-tint( $color, $level );
}

/// Darkens the color in light themes and lightens it in dark themes
/// @param {Color} $color - The color to darken or lighten
/// @param {Number} $level - The amount to darken or lighten the color
/// @return {Color} - The darkened or lightened color
///
/// @group color-system
@function k-try-darken( $color, $amount ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-lighten( $color, $amount );
    }
    @return k-color-darken( $color, $amount );
}

/// Lightens the color in light themes and darkens it in dark themes
/// @param {Color} $color - The color to lighten or darken
/// @param {Number} $level - The amount to lighten or darken the color
/// @return {Color} - The lightened or darkened color
///
/// @group color-system
@function k-try-lighten( $color, $amount ) {
    $_dark-theme: if( k-meta-variable-exists( kendo-is-dark-theme ), $kendo-is-dark-theme, false );

    @if $_dark-theme {
        @return k-color-darken( $color, $amount );
    }
    @return k-color-lighten( $color, $amount );
}

/// Converts a color with alpha to solid color mixed with a background color
/// @param {Color} $color - The color to convert
/// @param {Color} $bg - The background color
/// @return {Color} - The converted color
///
/// @group color-system
///
/// @example scss - Usage
///   @debug k-rgba-to-mix( rgba( #f00, 0.5 ), #fff ); // => #ff8080
@function k-rgba-to-mix( $color, $bg ) {
    $percent: k-color-alpha( $color ) * 100%;

    @return k-color-mix( rgba( $color, 1 ), $bg, $percent );
}

// TODO: Remove this function or rethink the logic
@function k-true-mix( $color1, $color2, $weight: 50% ) {
    @return k-color-mix( rgba( $color1, 1 ), rgba( $color2, 1 ), $weight );
}
