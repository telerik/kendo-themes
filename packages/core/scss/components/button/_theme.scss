@use "sass:map";
@use "sass:meta";
@use "../../mixins/index.import.scss" as *;
@use "../../functions/index.import.scss" as *;
@use "../../color-system/_functions.import.scss" as *;
@use "../../_variables.scss" as *;
@use "./_variables.scss" as *;

@mixin kendo-button--theme-base() {

    .k-button {

        &,
        &.k-button-base,
        &.k-button-solid,
        &.k-button-solid.k-button-base {
            @include fill(
                $kendo-button-text,
                $kendo-button-bg,
                $kendo-button-border,
                $kendo-button-gradient
            );
            @include box-shadow( $kendo-button-shadow );

            // Hover state
            &:hover,
            &.k-hover {
                @include fill(
                    $kendo-button-hover-text,
                    $kendo-button-hover-bg,
                    $kendo-button-hover-border,
                    $kendo-button-hover-gradient
                );
                @include box-shadow( $kendo-button-hover-shadow );
            }

            // Focus state
            &:focus,
            &.k-focus {
                @include focus-indicator( $kendo-button-focus-shadow, true, true );
            }

            // Active state
            &:active,
            &.k-active {
                @include fill(
                    $kendo-button-active-text,
                    $kendo-button-active-bg,
                    $kendo-button-active-border,
                    $kendo-button-active-gradient
                );
                @include box-shadow( $kendo-button-active-shadow );
            }

            // Selected state
            &.k-selected {
                @include fill(
                    $kendo-button-selected-text,
                    $kendo-button-selected-bg,
                    $kendo-button-selected-border,
                    $kendo-button-selected-gradient
                );
                @include box-shadow( $kendo-button-selected-shadow );
            }

            // Disabled state
            &:disabled,
            &.k-disabled {
                @include fill(
                    $kendo-button-disabled-text,
                    $kendo-button-disabled-bg,
                    $kendo-button-disabled-border,
                    $kendo-button-disabled-gradient
                );
                @include box-shadow( $kendo-button-disabled-shadow );
            }
        }

        &.k-button-outline,
        &.k-button-outline.k-button-base {
            @include box-shadow( none );
            border-color: currentColor;
            color: k-color(base-on-surface);
            background-color: transparent;

            // Hover state
            &:hover,
            &.k-hover {
                @include fill(
                    k-color(base),
                    k-color(on-base),
                    k-color(on-base)
                );
            }

            // Focus state
            &:focus,
            &.k-focus {
                @if $kendo-outline-button-shadow {
                    @include focus-indicator( 0 0 $kendo-outline-button-shadow-blur $kendo-outline-button-shadow-spread color-mix(in srgb, k-color(on-app-surface ) ( $kendo-outline-button-shadow-opacity * 100% ), transparent), true, true );
                }
            }

            // Active state
            &:active,
            &.k-active {
                @include fill(
                    k-color(base ),
                    k-color(on-base ),
                    k-color(on-base )
                );
            }

            // Selected
            &.k-selected {
                @include fill(
                    k-color(base ),
                    k-color(on-base ),
                    k-color(on-base )
                );
            }

            // Disabled state
            &:disabled,
            &.k-disabled {
                color: $kendo-button-disabled-text;
            }
        }

        &.k-button-flat,
        &.k-button-flat.k-button-base {
            color: inherit;

            // Disabled state
            &:disabled,
            &.k-disabled {
                color: $kendo-button-disabled-text;
            }
        }

        &.k-button-link,
        &.k-button-link.k-button-base {
            color: k-color(on-app-surface );

            // Hover
            &:hover,
            &.k-hover {
                color: k-color(on-app-surface);
            }

            // Focus
            &:focus,
            &.k-focus {
                @if ( $kendo-link-button-shadow ) {
                    @include focus-indicator( 0 0 $kendo-link-button-shadow-blur $kendo-link-button-shadow-spread color-mix(in srgb, k-color(on-app-surface ) ( $kendo-link-button-shadow-opacity * 100% ), transparent), true, true );
                }
            }

            // Active
            &:active,
            &.k-active {
                color: k-color(on-app-surface);
            }

            // Selected
            &.k-selected {
                color: k-color(on-app-surface);
            }

            // Disabled state
            &:disabled,
            &.k-disabled {
                color: $kendo-button-disabled-text;
            }
        }

        &.k-button-clear,
        &.k-button-clear.k-button-base {
            color: k-color(base-on-surface);

            &:focus,
            &.k-focus,
            &:active {
                &::after {
                    background-color: currentColor;
                    opacity: $kendo-clear-button-focus-opacity;
                    display: block;
                }
            }

            // Disabled state
            &:disabled,
            &.k-disabled {
                color: $kendo-button-disabled-text;
            }
        }

        @each $name, $color in $kendo-button-theme-colors {

            @if ($name != "base") {
                // Solid button
                &.k-button-#{$name},
                &.k-button-solid.k-button-#{$name} {

                    @include fill(
                        k-color(on-#{$name}),
                        k-color($name),
                        k-color($name),
                        $kendo-solid-button-gradient
                    );

                    // Hover state
                    &:hover,
                    &.k-hover {
                        @include fill(
                            null,
                            k-color(#{$name}-hover),
                            k-color(#{$name}-hover)
                        );
                    }

                    // Focus state
                    &:focus,
                    &.k-focus {
                        @if ( $kendo-solid-button-shadow ) {
                            @include focus-indicator( 0 0 $kendo-solid-button-shadow-blur $kendo-solid-button-shadow-spread color-mix(in srgb, k-color($name) ( $kendo-solid-button-shadow-opacity * 100% ), transparent), true, true );
                        }
                    }

                    // Active state
                    &:active,
                    &.k-active,
                    &.k-selected {
                        @include fill(
                            null,
                            k-color(#{$name}-active),
                            k-color(#{$name}-active)
                        );
                    }

                    // Disabled state
                    &:disabled,
                    &.k-disabled {
                        @include fill(
                            $kendo-button-disabled-text,
                            $kendo-button-disabled-bg,
                            $kendo-button-disabled-border,
                            $kendo-button-disabled-gradient
                        );
                        @include box-shadow( $kendo-button-disabled-shadow );
                    }
                }

                &.k-button-outline.k-button-#{$name} {
                    @include box-shadow( none );
                    border-color: currentColor;
                    color: k-color(#{$name}-on-surface);
                    background-color: transparent;

                    // Hover state
                    &:hover,
                    &.k-hover {
                        @include fill(
                            k-color(on-#{$name}),
                            $color,
                            $color
                        );
                    }

                    // Focus state
                    &:focus,
                    &.k-focus {
                        @if $kendo-outline-button-shadow {
                            @include focus-indicator( 0 0 $kendo-outline-button-shadow-blur $kendo-outline-button-shadow-spread color-mix(in srgb, k-color($name ) ( $kendo-outline-button-shadow-opacity * 100% ), transparent), true, true );
                        }
                    }

                    // Active state
                    &:active,
                    &.k-active {
                        @include fill(
                            k-color(on-#{$name} ),
                            $color,
                            $color
                        );
                    }

                    // Selected
                    &.k-selected {
                        @include fill(
                            k-color(on-#{$name} ),
                            $color,
                            $color
                        );
                    }

                    // Disabled state
                    &:disabled,
                    &.k-disabled {
                        color: $kendo-button-disabled-text;
                    }
                }

                &.k-button-flat.k-button-#{$name} {
                    color: k-color(#{$name}-on-surface);

                    // Disabled state
                    &:disabled,
                    &.k-disabled {
                        color: $kendo-button-disabled-text;
                    }
                }

                &.k-button-link.k-button-#{$name} {
                    color: $color;

                    // Hover
                    &:hover,
                    &.k-hover {
                       color: k-color(#{$name}-hover);
                    }

                    // Focus
                    &:focus,
                    &.k-focus {
                        @if ( $kendo-link-button-shadow ) {
                            @include focus-indicator( 0 0 $kendo-link-button-shadow-blur $kendo-link-button-shadow-spread color-mix(in srgb, k-color($name ) ( $kendo-link-button-shadow-opacity * 100% ), transparent), true, true );
                        }
                    }

                    // Active
                    &:active,
                    &.k-active {
                        color: k-color(#{$name}-active);
                    }

                    // Selected
                    &.k-selected {
                        color: k-color(#{$name}-active);
                    }

                    // Disabled state
                    &:disabled,
                    &.k-disabled {
                        color: $kendo-button-disabled-text;
                    }
                }

                &.k-button-clear.k-button-#{$name} {
                    color: k-color(#{$name}-on-surface);

                    &:focus,
                    &.k-focus,
                    &:active {
                        &::after {
                            background-color: currentColor;
                            opacity: $kendo-clear-button-focus-opacity;
                            display: block;
                        }
                    }

                    // Disabled state
                    &:disabled,
                    &.k-disabled {
                        color: $kendo-button-disabled-text;
                    }
                }
            }
        }
    }

}


@mixin kendo-button--theme() {
    @include kendo-button--theme-base();
}
