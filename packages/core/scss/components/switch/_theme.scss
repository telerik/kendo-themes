@use "../../mixins/index.import.scss" as *;
@use "../../color-system/_constants.scss" as *;
@use "../../_variables.scss" as *;
@use "./variables.scss" as *;

@mixin kendo-switch--theme-base() {

    // Switch
    .k-switch {}

    // Switch OFF
    .k-switch-off {

        // Normal state
        .k-switch-track {
            color: $kendo-switch-off-track-text;
        background-color: $kendo-switch-off-track-bg;
        border-color: $kendo-switch-off-track-border;
        @include linear-gradient($kendo-switch-off-track-gradient);
        }
        .k-switch-thumb {
            color: $kendo-switch-off-thumb-text;
        background-color: $kendo-switch-off-thumb-bg;
        border-color: $kendo-switch-off-thumb-border;
        @include linear-gradient($kendo-switch-off-thumb-gradient);
        }

        // Hover
        &:hover,
        &.k-hover {
            .k-switch-track {
                color: $kendo-switch-off-track-hover-text;
        background-color: $kendo-switch-off-track-hover-bg;
        border-color: $kendo-switch-off-track-hover-border;
        @include linear-gradient($kendo-switch-off-track-hover-gradient);
            }

            .k-switch-thumb {
                color: $kendo-switch-off-thumb-hover-text;
        background-color: $kendo-switch-off-thumb-hover-bg;
        border-color: $kendo-switch-off-thumb-hover-border;
        @include linear-gradient($kendo-switch-off-thumb-hover-gradient);
            }
        }

        // Focus
        &:focus,
        &.k-focus {
            .k-switch-track {
                color: $kendo-switch-off-track-focus-text;
        background-color: $kendo-switch-off-track-focus-bg;
        border-color: $kendo-switch-off-track-focus-border;
        @include linear-gradient($kendo-switch-off-track-focus-gradient);
                @if $kendo-enable-focus-contrast {
                    @include box-shadow( 0 0 0 2px k-color(on-app-surface));
                } @else {
                    outline: $kendo-switch-off-track-focus-ring;
                }
            }
        }

        // Disabled
        &:disabled,
        &.k-disabled {
            .k-switch-track {
                color: $kendo-switch-off-track-disabled-text;
        background-color: $kendo-switch-off-track-disabled-bg;
        border-color: $kendo-switch-off-track-disabled-border;
        @include linear-gradient($kendo-switch-off-track-disabled-gradient);
            }

            .k-switch-thumb {
                color: $kendo-switch-off-thumb-disabled-text;
        background-color: $kendo-switch-off-thumb-disabled-bg;
        border-color: $kendo-switch-off-thumb-disabled-border;
        @include linear-gradient($kendo-switch-off-thumb-disabled-gradient);
            }
        }

        .k-switch-label-on {
            color: transparent;
        }
    }

    // Switch ON
    .k-switch-on {

        // Normal state
        .k-switch-track {
            color: $kendo-switch-on-track-text;
        background-color: $kendo-switch-on-track-bg;
        border-color: $kendo-switch-on-track-border;
        @include linear-gradient($kendo-switch-on-track-gradient);
        }
        .k-switch-thumb {
            color: $kendo-switch-on-thumb-text;
        background-color: $kendo-switch-on-thumb-bg;
        border-color: $kendo-switch-on-thumb-border;
        @include linear-gradient($kendo-switch-on-thumb-gradient);
        }

        // Hover
        &:hover,
        &.k-hover {
            .k-switch-track {
                color: $kendo-switch-on-track-hover-text;
        background-color: $kendo-switch-on-track-hover-bg;
        border-color: $kendo-switch-on-track-hover-border;
        @include linear-gradient($kendo-switch-on-track-hover-gradient);
            }

            .k-switch-thumb {
                color: $kendo-switch-on-thumb-hover-text;
        background-color: $kendo-switch-on-thumb-hover-bg;
        border-color: $kendo-switch-on-thumb-hover-border;
        @include linear-gradient($kendo-switch-on-thumb-hover-gradient);
            }
        }

        // Focus
        &:focus,
        &.k-focus {
            .k-switch-track {
                color: $kendo-switch-on-track-focus-text;
        background-color: $kendo-switch-on-track-focus-bg;
        border-color: $kendo-switch-on-track-focus-border;
        @include linear-gradient($kendo-switch-on-track-focus-gradient);
                @if $kendo-enable-focus-contrast {
                    @include box-shadow( 0 0 0 2px k-color(on-app-surface ), if( $kendo-is-dark-theme, $kendo-color-white, $kendo-color-black ));
                } @else {
                    outline: $kendo-switch-on-track-focus-ring;
                }
            }
        }

        // Disabled
        &:disabled,
        &.k-disabled {
            .k-switch-track {
                color: $kendo-switch-on-track-disabled-text;
        background-color: $kendo-switch-on-track-disabled-bg;
        border-color: $kendo-switch-on-track-disabled-border;
        @include linear-gradient($kendo-switch-on-track-disabled-gradient);
            }

            .k-switch-thumb {
                color: $kendo-switch-on-thumb-disabled-text;
        background-color: $kendo-switch-on-thumb-disabled-bg;
        border-color: $kendo-switch-on-thumb-disabled-border;
        @include linear-gradient($kendo-switch-on-thumb-disabled-gradient);
            }
        }

        .k-switch-label-off {
            color: transparent;
        }
    }

}

@mixin kendo-switch--theme() {
    @include kendo-switch--theme-base();
}
