name: CI | Visual

env:
  CI: true

on:
  push:
    branches-ignore:
      # - 'main'
      - 'master'
      - 'develop'

jobs:
  run-tests:
    name: Run tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        theme: [default, bootstrap, material, classic]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Print Firefox version
        run: firefox --version

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install
        run: |
          npm ci
          npm run bootstrap

      - name: Build test assets
        run: npm run sass:flat

      - name: Visual tests
        run: ./build/create-screenshots.sh ${{ matrix.theme }}

      - name: Pack screenshots
        run: tar -cf screenshots-${{ matrix.theme }}.tar tests/visual/output/${{ matrix.theme }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots-${{ matrix.theme }}
          path: screenshots-${{ matrix.theme }}.tar

  detect-changes:
    # The name of the last step is used for the branch protection status check
    name: CI | Visual
    needs: run-tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Download screenshots
        uses: actions/download-artifact@v2
        with:
          path: .tmp

      - name: Unpack screenshots
        run: find .tmp -name "screenshots-*.tar" -type f -exec tar -xf {} \;

      - name: Compare artifacts
        run: |
          HAS_CHANGES=0
          HAS_NEW=0
          git diff --exit-code --quiet -- tests/visual/output/ || HAS_CHANGES=1
          [[ $(git ls-files --others --exclude-standard tests/visual/output) ]] && HAS_NEW=1
          echo "HAS_CHANGES=$HAS_CHANGES" >> $GITHUB_ENV
          echo "HAS_NEW=$HAS_NEW" >> $GITHUB_ENV

      - name: Setup git user
        run: |
          git config user.name "kendo-bot"
          git config user.email "kendouiteam@progress.com"

      - name: Push changes to GitHub
        if: ${{ env.HAS_CHANGES == 1 || env.HAS_NEW == 1 }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Visual tests have detected changes. Updating screenshots."

          git add tests/visual/output
          git commit -m "chore: update visual previews"

          git push

          echo "Mark checks as successful"

          commit=$(git rev-parse HEAD)
          ./build/mark-checks.sh $commit
