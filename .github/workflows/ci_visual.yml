name: CI | Visual

on:
  push:
    branches-ignore:
      - 'master'
      - 'develop'
      - 'v4-dev'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  prepare-artifacts:
    name: Prepare artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Print Firefox version
        run: firefox --version

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version: 14.x

      - name: Install
        run: |
          npm ci
          npm run bootstrap

      - name: Build test assets
        run: |
          npm run build:scripts
          npm run build:tests
          npm run sass

      - name: Update markup snapshots
        env:
          HEADLESS: 'true'
        run: |
          ./build/create-snapshots.mjs

      - name: Pack themes
        run: |
          tar -cf themes.tar \
            packages/default/dist/all.css \
            packages/bootstrap/dist/all.css \
            packages/classic/dist/all.css \
            packages/fluent/dist/all.css \
            packages/material/dist/all.css \
            packages/nouvelle/dist/all.css \
            packages/utils/dist/all.css

      - name: Pack snapshots
        run: tar --exclude tests/_output -cf snapshots.tar tests

      - name: Upload themes
        uses: actions/upload-artifact@v2
        with:
          name: themes
          path: themes.tar

      - name: Upload snapshots
        uses: actions/upload-artifact@v2
        with:
          name: snapshots
          path: snapshots.tar

  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: prepare-artifacts

    strategy:
      matrix:
        theme: [default, bootstrap, material, classic, nouvelle, fluent]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Print Firefox version
        run: firefox --version

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .tmp

      - name: Unpack artifacts
        run: find .tmp -name "*.tar" -type f -exec tar -xf {} \;

      - name: Create screenshots
        run: ./build/create-screenshots.sh ${{ matrix.theme }}

      - name: Pack screenshots
        run: tar -cf screenshots-${{ matrix.theme }}.tar tests/_output/${{ matrix.theme }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots-${{ matrix.theme }}
          path: screenshots-${{ matrix.theme }}.tar

  detect-changes:
    # The name of the last step is used for the branch protection status check
    name: CI | Visual
    needs: run-tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .tmp

      - name: Unpack artifacts
        run: find .tmp -name "*.tar" -type f -exec tar -xf {} \;

      - name: Compare artifacts
        run: |
          HAS_CHANGES=0
          HAS_NEW=0
          git diff --exit-code --quiet -- tests/ || HAS_CHANGES=1
          [[ $(git ls-files --others --exclude-standard tests/) ]] && HAS_NEW=1
          echo "HAS_CHANGES=$HAS_CHANGES" >> $GITHUB_ENV
          echo "HAS_NEW=$HAS_NEW" >> $GITHUB_ENV

      - name: Setup git user
        run: |
          git config user.name "kendo-bot"
          git config user.email "kendouiteam@progress.com"

      - name: Push changes to GitHub
        if: ${{ (env.HAS_CHANGES == 1 || env.HAS_NEW == 1) && github.actor != 'dependabot[bot]' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Visual tests have detected changes. Updating markup and screenshots."

          git add tests/
          git commit -m "chore: update visual previews"

          git push

          echo "Mark checks as successful"

          commit=$(git rev-parse HEAD)
          ./build/mark-checks.sh $commit
