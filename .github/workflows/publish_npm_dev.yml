name: Publish to npm (dev)

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - "CI Weekly"
    branches:
      - develop
    types:
      - completed

jobs:

  release-dev:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: develop
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup git
        run: |
          git config user.name "kendo-bot"
          git config user.email "kendouiteam@progress.com"

      - name: Setup node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Use cache for root node_modules
        id: cache-root-node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: root-node_modules-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package-lock.json') }}

      - name: Install
        if: steps.cache-root-node_modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --no-fund

      - name: Bootstrap
        run: npm run bootstrap

      - name: Build themes for dist
        run: |
          npm run sass
          npm run sass:flat
          npm run dist:swatches

      - name: Determine correct version to publish
        run: |
          DEV_VERSION=$(npm info @progress/kendo-theme-default@dev version)
          LATEST_VERSION=$(npm info @progress/kendo-theme-default@latest version)
          VERSION=$(node ./scripts/semver-dev-inc.js --dev $DEV_VERSION --latest $LATEST_VERSION)
          echo "Lerna should publish using $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Prepare release
        run: |
          npx lerna version $VERSION --no-changelog --no-git-tag-version --no-push
          git add .
          git commit -m "chore(release): v$VERSION"

      - name: Lerna publish
        run: |
          npx lerna publish from-package --dist-tag dev

      - name: Push release commit
        run: |
          git push origin develop:tmp-release-dev

      - name: Mark checks as successful
        run: |
          commit=$(git rev-parse HEAD)
          ./build/mark-checks.sh $commit
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Push release commit to develop
        run: |
          git push origin develop
          git push --delete origin tmp-release-dev
