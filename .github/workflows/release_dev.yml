name: Release dev chanel

defaults:
  run:
    shell: bash

env:
  CI: true
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI | Nightly"]
    branches: [develop]
    types:
      - completed

jobs:

  ci-dev:
    name: CI

    runs-on: ubuntu-latest

    steps:

      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup node cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        run: npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Lint scripts
        run: npm run eslint

      - name: Lint styles
        run: npm run sasslint

      - name: Check docs
        run: npm run docs:check

      - name: Ensure standalone build
        run: npm run sass:standalone

      - name: Build themes
        run: |
          npm run dart:flat
          npm run dart:swatches
          npm run sass:flat
          npm run sass:swatches

  release:
    name: Release
    needs: ci-dev

    runs-on: ubuntu-latest

    steps:

      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup node cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Add token
        run: printf "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: Install
        run: npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Build themes for dist
        run: |
          npm run sass:flat
          npm run sass:swatches

      - name: Lerna publish
        run: |
          npx lerna publish --canary=dev --npm-tag=dev
